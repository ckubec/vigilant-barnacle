{"version":3,"sources":["banner.tsx","header.tsx","app.tsx","index.js"],"names":["BannerCanvas","hex","canvasRef","React","createRef","state","height","window","innerHeight","width","innerWidth","handleWindowResize","bind","getHeight","this","setState","console","log","drawGrid","addEventListener","canvas","ctx","current","getContext","size","props","offset","offsety","Math","sqrt","z","i","hexdens","Hexagon","draw","ref","style","backgroundColor","display","Component","x","y","color","beginPath","fillStyle","fill","lineWidth","strokeStyle","cos","PI","sin","lineTo","stroke","closePath","tabs","buttonstyle","fontFamily","padding","fontSize","marginRight","textShadow","Header","shift","items","map","tab","name","NavItem","key","Nav","Link","toUpperCase","Navbar","collapseOnSelect","borderBottom","background","sticky","expand","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","className","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8cebe22.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\n\ninterface HexState {\n    width: number,\n    height: number\n}\n\nexport class BannerCanvas extends React.Component<HexState> {\n    canvasRef : React.RefObject<HTMLCanvasElement> = React.createRef();\n    constructor(hex:HexState) {\n        super(hex);\n        this.canvasRef = React.createRef();\n        this.state = {\n            height: window.innerHeight,\n            width: window.innerWidth\n        };\n        this.handleWindowResize = this.handleWindowResize.bind(this);\n        this.getHeight = this.getHeight.bind(this);\n    }\n\n    handleWindowResize () {\n        this.setState({\n            height: window.innerHeight,\n            width: window.innerWidth});\n        console.log(this.state);\n        this.drawGrid();\n    }\n\n    getHeight(){\n        return this.state;\n    }\n\n    componentDidMount(): void {\n        window.addEventListener(\"resize\", this.handleWindowResize);\n        this.drawGrid();\n    }\n\n    drawGrid() {\n        let canvas = this.canvasRef;\n        let ctx: CanvasRenderingContext2D | null = canvas.current ? canvas.current.getContext('2d') : null;\n\n\n        let hexdens = 50;\n        let size = this.props.height/hexdens;\n        let x =0;\n        let y =0;\n        let offset = 3/2 * size;\n        let offsety = Math.sqrt(3)*size;\n\n\n        for(let z=0; z<this.props.height/hexdens; z++) {\n            for (let i = 0; i < hexdens-2; i++) {\n                let temp;\n                if (i % 2 === 0) {\n                    temp = new Hexagon((x + (offset)) * i, y+(offsety*z), size, offset, \"black\");\n                } else\n                    temp = new Hexagon((x + (offset)) * i, (offsety*z)-(offsety / 2), size, offset, \"black\");\n\n                temp.draw(ctx);\n            }\n        }\n    }\n\n    render() {\n        const canvasstyle = {\n            backgroundColor: \"white\",\n            width: \"100%\",\n            height: \"200px\",\n            display: \"block\"\n        };\n\n        return (\n            <canvas ref={this.canvasRef} style={canvasstyle} />\n        );\n    };\n}\n\nclass Hexagon {\n    x:number;\n    y:number;\n    size:number;\n    offset:number;\n    color:string;\n\n    constructor(x:number, y:number, size:number, offset:number, color:string) {\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.offset = offset;\n        this.color = color;\n    }\n\n    draw(ctx:any) {\n        ctx.beginPath();\n        //ctx.moveTo(this.x + this.size * Math.cos(0), this.y + this.size * Math.sin(0));\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = \"white\";\n\n        let sides = 6;\n        //console.log(this);\n        for (let i=0; i<=sides; i++) {\n            this.x = this.x + this.size * Math.cos(i*2*Math.PI/sides);\n            this.y = this.y + this.size * Math.sin(i *2 * Math.PI/sides);\n            ctx.lineTo(this.x, this.y);\n            ctx.stroke();\n\n            //console.log(this);\n        }\n        ctx.closePath();\n\n        ctx.fill();\n    }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Nav, Navbar, NavbarBrand, NavItem} from \"react-bootstrap\";\nimport './header.css';\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\nimport NavbarToggle from \"react-bootstrap/NavbarToggle\";\nimport {BannerCanvas} from \"./banner\";\n\n\nlet tabs = [\"Chris Kubec\", \"About\", \"Projects\", \"Connect\"];\nconst buttonstyle = {\n    color: \"#ffffff\",\n    fontFamily: 'Dosis, sans-serif',\n    backgroundColor: \"black\",\n    padding: \".5em 1.5em .5em\",\n    fontSize: \"20px\",\n    marginRight: \".5em\",\n    textShadow: \"160\"\n};\n\nexport class Header extends React.Component {\n    render() {\n        const styling = {\n            color: '#3739ff',\n            borderBottom: \"3px solid black\",\n            background: \"black\"\n        };\n        const brand = \"Chris Kubec\";\n        tabs.shift();\n        let items = tabs.map(tab => myNavItems(tab));\n\n        const togglestyle = {\n            padding: \".5em 1.5em .5em\",\n            color: \"white\",\n        };\n\n        const titlestyle = {\n            color: \"white\",\n            fontFamily: 'Dosis, sans-serif',\n            fontSize: \"20px\",\n        };\n\n        return (\n            <>\n                <BannerCanvas width={window.innerWidth} height={window.innerHeight*.6} />\n\n                <Navbar collapseOnSelect style={styling} sticky=\"top\" expand=\"lg\"  >\n                    <NavbarBrand style={titlestyle}><Nav.Link style={buttonstyle}>{brand.toUpperCase()}</Nav.Link></NavbarBrand>\n                    <NavbarToggle aria-controls=\"responsive-navbar-nav\" style={togglestyle}/>\n                    <NavbarCollapse id=\"responsive-navbar-nav\" >\n                        <Nav className=\"justify-content-center\">{items}</Nav>\n                    </NavbarCollapse>\n                </Navbar>\n            </>\n        );\n    }\n}\n\nfunction myNavItems(name:string) {\n    return (\n        <NavItem key={name} >\n            <Nav.Link style={buttonstyle} >{name.toUpperCase()}</Nav.Link>\n        </NavItem>\n    );\n}","import React from 'react';\nimport './index.css';\nimport {Header} from \"./header\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <>\n                <Header/>\n                <p>Body</p>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));"],"sourceRoot":""}