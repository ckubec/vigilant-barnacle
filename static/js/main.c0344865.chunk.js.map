{"version":3,"sources":["banner.tsx","header.tsx","body.tsx","app.tsx","index.js"],"names":["BannerCanvas","props","windowheight","window","innerHeight","windowwidth","innerWidth","grid","interval","handleWindowResize","bind","buildGrid","offsety","Math","sqrt","z","this","x","push","Hexagon","rebuildGrid","id","width","height","style","backgroundColor","display","map","draw","addEventListener","setInterval","tick","clearInterval","floor","random","length","setColor","randColor","replace","forceUpdate","React","Component","y","size","color","stroke","sides","radius","fill","tabs","buttonstyle","fontFamily","padding","fontSize","marginRight","textShadow","Header","brand","shift","items","tab","name","NavItem","key","Nav","Link","href","toUpperCase","Navbar","borderBottom","background","sticky","expand","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","className","Body","Accordion","Card","margin","border","as","Text","bodystyle","position","overflowY","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0344865.chunk.js","sourcesContent":["import React from 'react';\nimport {Stage, Layer, RegularPolygon} from 'react-konva';\n\n\nexport class BannerCanvas extends React.Component {\n    windowheight = window.innerHeight;\n    windowwidth = window.innerWidth;\n    grid: Hexagon[] = [];\n    interval: any;\n    constructor(props:any) {\n        super(props);\n        this.handleWindowResize = this.handleWindowResize.bind(this);\n        this.buildGrid();\n    }\n\n    buildGrid() {\n        let size = 40;\n        let offset = 3 / 2 * size;\n        let offsety = Math.sqrt(3) * size;\n\n        for (let z = 0; z < this.windowheight; z += offset) {\n            for (let x = 0; x <= this.windowwidth + offsety; x+=offsety) {\n                if ((z/offset) % 2 === 0) {\n                    this.grid.push( new Hexagon(x*(z+1), x, z, size, \"black\"));\n                } else {\n                    this.grid.push( new Hexagon(x*(z+1), x - offsety/2, z, size, \"black\"));\n                }\n            }\n        }\n    }\n\n    rebuildGrid() {\n        this.grid = [];\n        this.buildGrid();\n    }\n\n    handleWindowResize() {\n        this.windowheight = window.innerHeight;\n        this.windowwidth = window.innerWidth;\n        this.rebuildGrid();\n    }\n\n    render() {\n        const canvasstyle = {\n            backgroundColor: \"black\",\n            display: \"flex\"\n        };\n\n        return (\n            <Stage id=\"bannerstage\" width={this.windowwidth} height={400} style={canvasstyle}>\n                <Layer id=\"bannerlayer\">\n                    {this.grid.map(grid => grid.draw())}\n                </Layer>\n            </Stage>\n        );\n    }\n\n    componentDidMount(): void {\n        window.addEventListener(\"resize\", this.handleWindowResize);\n        this.interval = setInterval(() => this.tick(), 100);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.interval);\n    }\n\n    tick() {\n        this.grid[Math.floor(Math.random()*(this.grid.length))].setColor(this.grid[0].randColor());\n        this.grid[Math.floor(Math.random()*(this.grid.length))].setColor(\"rgba(0,0,0,alp\".replace(\"alp\", \"1\"));\n\n        this.forceUpdate();\n    }\n}\n\n\nclass Hexagon {\n    id:number;\n    x:number;\n    y:number;\n    size:number;\n    color:string;\n    stroke:string;\n\n    constructor(id:number, x:number, y:number, size:number, color:string) {\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.color = color;\n        this.stroke = \"black\";\n    }\n\n    draw() {\n        return <RegularPolygon id={\"hex \"+this.id} sides={6} radius={this.size} x={this.x} y={this.y} fill={this.color} stroke={this.stroke} />;\n    }\n\n    setColor(color:string) {\n        this.color = color;\n        this.stroke = color;\n    }\n\n    randColor() {\n        return \"rgba(\" + Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \")\";\n    }\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Nav, Navbar, NavbarBrand, NavItem} from \"react-bootstrap\";\nimport './header.css';\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\nimport NavbarToggle from \"react-bootstrap/NavbarToggle\";\nimport {BannerCanvas} from \"./banner\";\n\n\nlet tabs = [\"Chris Kubec\", \"About\", \"Skills\", \"Experience\", \"Projects\", \"Connect\", \"Archive\"];\nconst buttonstyle = {\n    color: \"#ffffff\",\n    fontFamily: 'Dosis, sans-serif',\n    backgroundColor: \"transparent\",\n    padding: \".5em 1.5em .5em\",\n    fontSize: \"20px\",\n    marginRight: \".5em\",\n    textShadow: \"160\"\n};\n\nexport class Header extends React.Component {\n    render() {\n        const styling = {\n            color: '#3739ff',\n            borderBottom: \"3px solid black\",\n            background: \"black\"\n        };\n        const brand = tabs.shift();\n        let items = tabs.map(tab => myNavItems(tab));\n\n        const togglestyle = {\n            padding: \".5em 1.5em .5em\",\n            color: \"white\",\n        };\n\n        const titlestyle = {\n            color: \"white\",\n            fontFamily: 'Dosis, sans-serif',\n            fontSize: \"20px\",\n        };\n\n        return (\n            <>\n                {/*<Navbar>*/}\n                    <BannerCanvas />\n                    <Navbar  style={styling} sticky=\"top\" expand=\"lg\"  >\n                        <NavbarBrand style={titlestyle}><Nav.Link style={buttonstyle}>{brand?.toUpperCase()}</Nav.Link></NavbarBrand>\n                        <NavbarToggle aria-controls=\"responsive-navbar-nav\" style={togglestyle}/>\n                        <NavbarCollapse id=\"responsive-navbar-nav\" >\n                            <Nav className=\"justify-content-center\">{items}</Nav>\n                        </NavbarCollapse>\n                    </Navbar>\n                {/*</Navbar>*/}\n            </>\n        );\n    }\n}\n\nfunction myNavItems(name:string) {\n    return (\n        <NavItem key={name} >\n            <Nav.Link style={buttonstyle} href={\"#\"+name}>{name.toUpperCase()}</Nav.Link>\n        </NavItem>\n    );\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {AccordionToggle, Button, Card, AccordionCollapse, Accordion} from \"react-bootstrap\";\nimport image from \"./img/About.jpeg\";\n\n\nexport class Body extends React.Component {\n    render() {\n        //let things = items.map(item => Page(item));\n        return (\n                <div>\n                    {Page()}\n                </div>\n        );\n    }\n}\n\nfunction Page() {\n    return (\n        <Accordion>\n            {About()}\n\n        </Accordion>\n    );\n}\n\nfunction About() {\n    const cardStyle = {\n        margin: \"20px 20px 20px\",\n        color: \"#ffffff\",\n        backgroundColor: \"black\",\n        borderBottom: \"3px solid black\",\n        border: \"3px solid midnightblue\",\n        textShadow: \"160\"\n    };\n\n    const header = {\n        borderBottom: \"medium outset gray\"\n    };\n\n    return (\n        <Card id=\"About\" style={cardStyle}>\n            <Card.Header style={header} as=\"h5\">About</Card.Header>\n            <Card.Body>\n                {/*<AccordionCollapse eventKey=\"open\"><Card.Img src={image}></Card.Img></AccordionCollapse>*/}\n                <Card.Text>\n                    Hi my name is Chris, a Full Stack Software Engineer located in Seattle, Washington...\n                    This site is still under construction, comeback next week.  <i>Posted - 2/7/20</i>\n                </Card.Text>\n                {/*<AccordionCollapse eventKey=\"open\">*/}\n                {/*    /!*<Card.Text>*!/*/}\n                {/*    /!*    I'm originally from Kent, WA and went to University of Washington.*!/*/}\n\n                {/*    /!*    After graduating in 2016 I ended up at General Electric Healthcare in the Life Science space working infrastructure and DevOps.*!/*/}\n\n                {/*    /!*    Spending a year at GE I realized I had outgrown my role*!/*/}\n\n\n\n                {/*    /!*</Card.Text>*!/*/}\n                {/*</AccordionCollapse>*/}\n                {/*<AccordionToggle as={Button} variant=\"link\" eventKey=\"open\">more</AccordionToggle>*/}\n            </Card.Body>\n        </Card>\n    );\n}\n","import React from 'react';\nimport {Header} from \"./header\";\nimport {Body} from \"./body\";\n\nconst bodystyle = {\n    position: 'relative' as 'relative',\n    overflowY: \"scroll\" as 'scroll',\n    backgroundColor: \"black\"\n};\n\nclass App extends React.Component {\n\n    render() {\n        return (\n            <>\n                <Header/>\n                <body  style={bodystyle} >\n                    <Body key=\"pagebody\"/>\n                </body>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(<App key=\"app\" />, document.getElementById(\"app\"));"],"sourceRoot":""}