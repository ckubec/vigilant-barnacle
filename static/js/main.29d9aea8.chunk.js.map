{"version":3,"sources":["banner.tsx","header.tsx","app.tsx","index.js"],"names":["BannerCanvas","hex","state","height","window","innerHeight","width","innerWidth","handleWindowResize","bind","this","setState","console","log","addEventListener","canvasstyle","backgroundColor","outerWidth","display","offsety","Math","sqrt","z","i","push","sides","radius","x","y","fill","getColor","stroke","style","floor","random","React","Component","tabs","buttonstyle","color","fontFamily","padding","fontSize","marginRight","textShadow","Header","shift","items","map","tab","name","NavItem","key","Nav","Link","toUpperCase","Navbar","collapseOnSelect","borderBottom","background","sticky","expand","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","className","App","ReactDOM","render","document","getElementById"],"mappings":"0SAUaA,EAAb,YACI,WAAYC,GAAgB,IAAD,8BACvB,4CAAMA,KACDC,MAAQ,CACTC,OAAQC,OAAOC,YACfC,MAAOF,OAAOG,YAElB,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBANH,EAD/B,kFAWQC,KAAKC,SAAS,CACVR,OAAQC,OAAOC,YACfC,MAAOF,OAAOG,aAElBK,QAAQC,IAAIH,KAAKR,SAfzB,0CAmBQE,OAAOU,iBAAiB,SAAUJ,KAAKF,sBAnB/C,+BAkCQ,IAXA,IAAMO,EAAc,CAChBC,gBAAiB,QACjBV,MAAOF,OAAOa,WACdd,OAAQC,OAAOC,YAAc,EAC7Ba,QAAS,QAITC,EAFO,GAEGC,KAAKC,KAAK,GACpBpB,EAAM,GAEDqB,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IACjBD,EAAI,IAAM,EAEVrB,EAAIuB,KAAK,kBAAC,iBAAD,CAAgBC,MAAO,EAAGC,OATpC,GASkDC,EAAGR,EAAUI,EAAGK,EAAG,EARnE,KAQgFN,EAAGO,KAAMnB,KAAKoB,WACtEC,OAAQ,WAEjC9B,EAAIuB,KAAK,kBAAC,iBAAD,CAAgBC,MAAO,EAAGC,OAZpC,GAYkDC,EAAGR,EAAUI,EAAIJ,EAAU,EAAGS,EAAG,EAXjF,KAW8FN,EACtEO,KAAMnB,KAAKoB,WAAYC,OAAQ,WAKpE,OACI,kBAAC,QAAD,CAAOzB,MAAOF,OAAOG,WAAYJ,OAAQ,IAAK6B,MAAOjB,GACjD,kBAAC,QAAD,KACKd,MAlDrB,iCAyDQ,MAAO,QAAUmB,KAAKa,MAAoB,IAAdb,KAAKc,UAAgB,KAAMd,KAAKa,MAAoB,IAAdb,KAAKc,UAAgB,KAAMd,KAAKa,MAAoB,IAAdb,KAAKc,UAAgB,KAAMd,KAAKa,MAAoB,IAAdb,KAAKc,UAAgB,QAzD3K,GAAkCC,IAAMC,WCDpCC,EAAO,CAAC,cAAe,QAAS,WAAY,WAC1CC,EAAc,CAChBC,MAAO,UACPC,WAAY,oBACZxB,gBAAiB,QACjByB,QAAS,kBACTC,SAAU,OACVC,YAAa,OACbC,WAAY,OAGHC,EAAb,iLAQQR,EAAKS,QACL,IAAIC,EAAQV,EAAKW,KAAI,SAAAC,GAAG,OAoCZC,EApC2BD,EAsCvC,kBAACE,EAAA,EAAD,CAASC,IAAKF,GACV,kBAACG,EAAA,EAAIC,KAAL,CAAUtB,MAAOM,GAAeY,EAAKK,gBAHjD,IAAoBL,KAlBZ,OACI,oCACI,yBAAKlB,MAPE,CACX7B,OAAQ,IACRG,MAAO,MAMC,kBAAC,EAAD,CAAcA,MAAOF,OAAOG,WAAYJ,OAAQC,OAAOC,eAG3D,kBAACmD,EAAA,EAAD,CAAQC,kBAAgB,EAACzB,MA/BjB,CACZO,MAAO,UACPmB,aAAc,kBACdC,WAAY,SA4BiCC,OAAO,MAAMC,OAAO,MACzD,kBAACC,EAAA,EAAD,CAAa9B,MAlBN,CACfO,MAAO,QACPC,WAAY,oBACZE,SAAU,SAe8B,kBAACW,EAAA,EAAIC,KAAL,CAAUtB,MAAOM,GA3B/C,cA2BmEiB,gBACrE,kBAACQ,EAAA,EAAD,CAAcC,gBAAc,wBAAwBhC,MAxB5C,CAChBS,QAAS,kBACTF,MAAO,WAuBC,kBAAC0B,EAAA,EAAD,CAAgBC,GAAG,yBACf,kBAACb,EAAA,EAAD,CAAKc,UAAU,0BAA0BpB,UArCjE,GAA4BZ,IAAMC,W,ICJnBgC,E,iLATP,OACI,oCACI,kBAAC,EAAD,MACA,wC,GALEjC,IAAMC,WCDxBiC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,S","file":"static/js/main.29d9aea8.chunk.js","sourcesContent":["import React from 'react';\nimport Konva from 'konva';\nimport {Stage, Layer, RegularPolygon} from 'react-konva';\n\n\ninterface HexState {\n    width: number,\n    height: number\n}\n\nexport class BannerCanvas extends React.Component<HexState> {\n    constructor(hex: HexState) {\n        super(hex);\n        this.state = {\n            height: window.innerHeight,\n            width: window.innerWidth\n        };\n        this.handleWindowResize = this.handleWindowResize.bind(this);\n    }\n\n    handleWindowResize() {\n        this.setState({\n            height: window.innerHeight,\n            width: window.innerWidth\n        });\n        console.log(this.state);\n    }\n\n    componentDidMount(): void {\n        window.addEventListener(\"resize\", this.handleWindowResize);\n    }\n\n    render() {\n        const canvasstyle = {\n            backgroundColor: \"black\",\n            width: window.outerWidth,\n            height: window.innerHeight / 2,\n            display: \"flex\"\n        };\n        let size = 35;\n        let offset = 3 / 2 * size;\n        let offsety = Math.sqrt(3) * size;\n        let hex = [];\n\n        for (let z = 0; z < 9; z++) {\n            for (let i = 0; i <= 25; i++) {\n                if (z % 2 === 0) {\n                    //hex.push( new Hexagon(offset*i, 0 + offset*z, size, \"black\"));\n                    hex.push(<RegularPolygon sides={6} radius={size} x={offsety * i} y={0 + offset * z} fill={this.getColor()}\n                                             stroke={\"white\"}></RegularPolygon>);\n                } else {\n                    hex.push(<RegularPolygon sides={6} radius={size} x={offsety * i - offsety / 2} y={0 + offset * z}\n                                             fill={this.getColor()} stroke={\"white\"}></RegularPolygon>);\n                }\n            }\n        }\n\n        return (\n            <Stage width={window.innerWidth} height={400} style={canvasstyle}>\n                <Layer>\n                    {hex}\n                </Layer>\n            </Stage>\n        );\n    };\n\n    getColor() {\n        return \"rgba(\" + Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \")\";\n    }\n}\n\nclass Hexagon {\n    x:number;\n    y:number;\n    size:number;\n    color:string;\n\n    constructor(x:number, y:number, size:number, color:string) {\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.color = color;\n        this.draw = this.draw.bind(this);\n    }\n\n    draw() {\n        return <RegularPolygon sides={6} radius={this.size} x={this.x} y={this.y} fill={this.color} stroke={\"white\"}></RegularPolygon>;\n    }\n\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Nav, Navbar, NavbarBrand, NavItem} from \"react-bootstrap\";\nimport './header.css';\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\nimport NavbarToggle from \"react-bootstrap/NavbarToggle\";\nimport {BannerCanvas} from \"./banner\";\n\n\nlet tabs = [\"Chris Kubec\", \"About\", \"Projects\", \"Connect\"];\nconst buttonstyle = {\n    color: \"#ffffff\",\n    fontFamily: 'Dosis, sans-serif',\n    backgroundColor: \"black\",\n    padding: \".5em 1.5em .5em\",\n    fontSize: \"20px\",\n    marginRight: \".5em\",\n    textShadow: \"160\"\n};\n\nexport class Header extends React.Component {\n    render() {\n        const styling = {\n            color: '#3739ff',\n            borderBottom: \"3px solid black\",\n            background: \"black\"\n        };\n        const brand = \"Chris Kubec\";\n        tabs.shift();\n        let items = tabs.map(tab => myNavItems(tab));\n\n        const togglestyle = {\n            padding: \".5em 1.5em .5em\",\n            color: \"white\",\n        };\n\n        const titlestyle = {\n            color: \"white\",\n            fontFamily: 'Dosis, sans-serif',\n            fontSize: \"20px\",\n        };\n\n        const banner = {\n            height: 400,\n            width: 400\n        }\n\n        return (\n            <>\n                <div style={banner}>\n                    <BannerCanvas width={window.innerWidth} height={window.innerHeight}/>\n                </div>\n\n                <Navbar collapseOnSelect style={styling} sticky=\"top\" expand=\"lg\"  >\n                    <NavbarBrand style={titlestyle}><Nav.Link style={buttonstyle}>{brand.toUpperCase()}</Nav.Link></NavbarBrand>\n                    <NavbarToggle aria-controls=\"responsive-navbar-nav\" style={togglestyle}/>\n                    <NavbarCollapse id=\"responsive-navbar-nav\" >\n                        <Nav className=\"justify-content-center\">{items}</Nav>\n                    </NavbarCollapse>\n                </Navbar>\n            </>\n        );\n    }\n}\n\nfunction myNavItems(name:string) {\n    return (\n        <NavItem key={name} >\n            <Nav.Link style={buttonstyle} >{name.toUpperCase()}</Nav.Link>\n        </NavItem>\n    );\n}","import React from 'react';\nimport './index.css';\nimport {Header} from \"./header\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <>\n                <Header/>\n                <p>Body</p>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));"],"sourceRoot":""}