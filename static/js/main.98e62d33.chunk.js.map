{"version":3,"sources":["header/banner.tsx","features/stateSlice.ts","header/header.tsx","features/iconmanager.tsx","body/skills.tsx","body/about.tsx","body/built.tsx","body/contact.tsx","body/portfolio.tsx","body/body.tsx","app.tsx","app/store.ts","index.tsx"],"names":["BannerCanvas","props","windowheight","windowwidth","document","body","clientWidth","grid","interval","handleWindowResize","bind","buildGrid","offsety","Math","sqrt","z","this","x","push","Hexagon","rebuildGrid","id","width","height","style","display","key","map","draw","window","addEventListener","setInterval","tick","removeEventListener","clearInterval","floor","random","length","setColor","randColor","forceUpdate","React","Component","y","size","color","stroke","sides","radius","fill","preventDefault","initialState","lightMode","matchMedia","matches","aboutExpand","slice","createSlice","name","reducers","lightModeSwap","state","expandedAbout","actions","selectLight","app","selectAboutExpand","tabs","Header","dispatch","useDispatch","mode","useSelector","items","tab","Nav","Link","href","toUpperCase","background","backgroundColor","Navbar","variant","collapseOnSelect","sticky","expand","className","NavbarToggle","NavbarCollapse","onClick","viewBox","d","smallImageStore","largeImageStore","SmallIcons","icon","xmlns","theIcon","keytemp","getSmallImage","LargeIcons","getLrgImage","SectionIcons","Skills","Container","Row","built","skillsTree","skill","Col","xs","sm","md","Card","Text","listStyle","SkillBuild","getSkills","textAlign","fontSize","About","light","AccordionCollapse","eventKey","AccordionToggle","as","Button","hidden","Built","card","Body","links","Contact","linkdivs","item","Portfolio","Accordion","bodystyle","position","overflowY","App","store","configureStore","reducer","appReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.98e62d33.chunk.js","sourcesContent":["import React from 'react';\nimport {Stage, Layer, RegularPolygon } from 'react-konva';\n\n\n//TODO Optimization and repaint fix rather then current implementation, organize Hexes into 2D Array\n// and during resize keep array the same and only add/drop the cutoff or added Hexes.\nexport class BannerCanvas extends React.Component {\n    windowheight = 425;\n    windowwidth = document.body.clientWidth;\n    grid: Hexagon[] = [];\n    interval: any;\n\n    constructor(props:any) {\n        super(props);\n        this.handleWindowResize = this.handleWindowResize.bind(this);\n        this.buildGrid();\n    }\n\n    buildGrid() {\n        let size = 40;\n        let offset = 3 / 2 * size;\n        let offsety = Math.sqrt(3) * size;\n\n        for (let z = 0; z < this.windowheight; z += offset) {\n            for (let x = 0; x <= this.windowwidth + offsety; x+=offsety) {\n                if ((z/offset) % 2 === 0) {\n                    this.grid.push( new Hexagon((x+1)*(z+1), x, z, size, \"transparent\"));\n                } else {\n                    this.grid.push( new Hexagon((x+1)*(z+1), x - offsety/2, z, size, \"transparent\"));\n                }\n            }\n        }\n    }\n\n    rebuildGrid() {\n        this.grid = [];\n        this.buildGrid();\n    }\n\n    handleWindowResize() {\n        this.windowwidth = document.body.clientWidth;\n        this.rebuildGrid();\n    }\n\n    render() {\n        //TODO Extract to style sheet if more styles start popping up in this component.\n        const canvasstyle = {\n            display: \"flex\"\n        };\n\n        return (\n            <Stage id=\"bannerstage\" width={document.body.clientWidth} height={400} style={canvasstyle} key={\"BannerStage\"} >\n                <Layer id=\"bannerlayer\">\n                    {this.grid.map(grid => grid.draw())}\n                </Layer>\n            </Stage>\n        );\n    }\n\n    componentDidMount(): void {\n        window.addEventListener(\"resize\", this.handleWindowResize);\n        this.interval = setInterval(() => this.tick(), 200);\n    }\n\n    componentWillUnmount(): void {\n        window.removeEventListener(\"resize\", this.handleWindowResize);\n        clearInterval(this.interval);\n    }\n\n    //TODO tweak animation to create similar effect to the buttons in Nav.\n    tick() {\n        this.grid[Math.floor(Math.random()*(this.grid.length))].setColor(this.grid[0].randColor());\n        this.grid[Math.floor(Math.random()*(this.grid.length))].setColor(\"transparent\");\n\n        this.forceUpdate();\n    }\n}\n\n\nclass Hexagon {\n    id:number;\n    x:number;\n    y:number;\n    size:number;\n    color:string;\n    stroke:string;\n\n    constructor(id:number, x:number, y:number, size:number, color:string) {\n        this.id = id;\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.color = color;\n        this.stroke = color;\n    }\n\n    draw() {\n        return <RegularPolygon id={\"hex \"+this.id} key={\"hex\" + this.id} sides={6} radius={this.size} x={this.x} y={this.y} fill={this.color} stroke={this.stroke} preventDefault={false} />;\n    }\n\n    setColor(color:string) {\n        this.color = color;\n        this.stroke = color;\n    }\n\n    randColor() {\n        return \"rgba(\" + Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \")\";\n    }\n}","import { createSlice } from '@reduxjs/toolkit';\nimport {RootState} from \"../app/store\";\n\ninterface AppState {\n    lightMode: boolean;\n    aboutExpand: boolean;\n};\n\nconst initialState: AppState = {\n    lightMode: window.matchMedia('(prefers-color-scheme: light)').matches,\n    aboutExpand: false,\n};\n\nexport const slice = createSlice({\n    name: 'app',\n    initialState,\n    reducers: {\n        lightModeSwap: state => {\n             state.lightMode = (state.lightMode) ? false : true;\n        },\n        expandedAbout: state => {\n            state.aboutExpand = (state.aboutExpand) ? false : true;\n        },\n    }\n});\n\nexport const { lightModeSwap, expandedAbout } = slice.actions;\n\nexport const selectLight = (state: RootState) => state.app.lightMode;\nexport const selectAboutExpand = (state: RootState) => state.app.aboutExpand;\n\n\nexport default slice.reducer;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Nav, Navbar} from \"react-bootstrap\";\nimport './header.scss';\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\nimport NavbarToggle from \"react-bootstrap/NavbarToggle\";\nimport {BannerCanvas} from \"./banner\";\nimport {selectLight, lightModeSwap} from '../features/stateSlice';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nlet tabs = [\"About\", \"Skills\", \"Portfolio\", \"Contact\"];\n\nexport function Header () {\n    const dispatch = useDispatch();\n    const mode = useSelector(selectLight);\n    let items = tabs.map(tab => myNavItems(tab));\n    let background = {\n        backgroundColor : (mode) ? \"white\" : \"black\",\n    }\n\n    return (\n        <>\n        <div style={background}>\n            <BannerCanvas key={\"Banner\"} ></BannerCanvas>\n        </div>\n            <Navbar variant={mode ? \"light\" : \"dark\"} collapseOnSelect sticky=\"top\" expand=\"md\" >\n                <Nav.Link className=\"title\">{\"Chris Kubec\".toUpperCase()}</Nav.Link>\n\n                <NavbarToggle className=\"menuToggle col-9\">\n                    MENU\n                </NavbarToggle>\n\n                <NavbarCollapse id=\"responsive-navbar-nav\">\n                    <Nav className=\"justify-content-center mr-auto\">{items}</Nav>\n                </NavbarCollapse>\n                <Nav.Link className=\"col-3\" id=\"lighttoggle\" key={\"light\"} onClick={() => dispatch(lightModeSwap())}>\n                    <svg height=\"2rem\" viewBox=\"0 0 512 512\" /*visibility={mode ? \"hidden\" : \"visible\"}*/>\n                        <path d=\"m57.8125 337.492188v57.175781c0 32.425781 26.453125 58.878906 58.878906 58.878906h57.175782l40.53125 40.53125c11.09375 11.09375 26.027343 17.28125 41.601562 17.28125s30.507812-6.1875 41.601562-17.28125l40.53125-40.53125h57.175782c32.425781 0 58.878906-26.453125 58.878906-58.878906v-57.175781l40.53125-40.53125c11.09375-11.09375 17.28125-26.027344 17.28125-41.601563s-6.1875-30.507813-17.28125-41.597656l-40.53125-40.535157v-57.171874c0-32.429688-26.453125-58.882813-58.878906-58.882813h-57.175782l-40.53125-40.53125c-22.1875-22.1875-61.015624-22.1875-83.203124 0l-40.53125 40.53125h-57.175782c-32.425781 0-58.878906 26.453125-58.878906 58.882813v57.171874l-40.53125 40.535157c-11.09375 11.089843-17.28125 26.023437-17.28125 41.597656s6.1875 30.507813 17.28125 41.601563zm198.1875-210.132813c8.746094 0 16 7.253906 16 16v224c0 8.746094-7.253906 16-16 16-74.238281 0-128-53.757813-128-128 0-74.238281 53.761719-128 128-128zm0 0\"/>\n                    </svg>\n                </Nav.Link>\n            </Navbar>\n        </>\n\n    );\n}\n\nfunction myNavItems(name:string) {\n    return (\n        <Nav.Link href={\"#\"+name} key={name}>{name.toUpperCase()}</Nav.Link>\n    );\n}","import React from 'react';\n\n//Enums for Small icon image paths\nenum smallImageStore {\n    Android = \"M24 19H0a13.6 13.6 0 0 1 2.21-6.07A11.2 11.2 0 0 1 5.87 9.4l.41-.23-2.02-3.41a.51.51 0 0 1 .17-.7.5.5 0 0 1 .69.18l2.08 3.5a12.62 12.62 0 0 1 4.84-.9 12.2 12.2 0 0 1 4.75.9l2.07-3.5a.5.5 0 0 1 .7-.17.51.51 0 0 1 .16.7L17.7 9.19l.5.28a11.38 11.38 0 0 1 3.63 3.62A14.48 14.48 0 0 1 24 19zm-7.5-4.48a1 1 0 0 0 1 1 1 1 0 0 0 1-1 1 1 0 0 0-1-1 1 1 0 0 0-1 1zm-11 0a1 1 0 0 0 1 1 1 1 0 0 0 1-1 1 1 0 0 0-1-1 1 1 0 0 0-1 1z\",\n    Bootstrap = \"M20 0H4C1.793.006.006 1.793 0 4v16c0 2.2 1.8 4 4 4h16c2.2 0 4-1.8 4-4V4c0-2.2-1.8-4-4-4zm-2.187 16.855c-.2.482-.517.907-.923 1.234-.42.34-.952.62-1.607.82-.654.203-1.432.305-2.333.305H6.518v-14h6.802c1.258 0 2.266.283 3.02.86.76.58 1.138 1.444 1.138 2.61 0 .705-.172 1.31-.518 1.81-.344.497-.84.886-1.48 1.156v.046c.854.18 1.515.585 1.95 1.215s.658 1.426.658 2.387c0 .538-.104 1.05-.3 1.528l.025.027zm-2.776-3.45c-.41-.375-.986-.558-1.73-.558H8.985v4.368h4.334c.74 0 1.32-.192 1.73-.58.41-.385.62-.934.62-1.64-.007-.69-.21-1.224-.62-1.59h-.017zm-.6-2.823c.396-.336.59-.817.59-1.444 0-.704-.175-1.204-.53-1.49-.352-.285-.86-.433-1.528-.433h-4v3.863h4c.583 0 1.08-.17 1.464-.496z\",\n    \"C++\" = \"M22.393 6c-.167-.29-.398-.543-.652-.69L12.925.22c-.508-.293-1.339-.293-1.847 0L2.26 5.31c-.508.293-.923 1.013-.923 1.6v10.18c0 .294.104.62.271.91.167.29.398.543.652.689l8.816 5.091c.508.293 1.339.293 1.847 0l8.816-5.091c.254-.146.485-.399.652-.689s.271-.616.271-.91V6.91c.002-.294-.102-.62-.269-.91zM12 19.109c-3.92 0-7.109-3.189-7.109-7.109S8.08 4.891 12 4.891a7.133 7.133 0 0 1 6.156 3.552l-3.076 1.781A3.567 3.567 0 0 0 12 8.445c-1.96 0-3.554 1.595-3.554 3.555S10.04 15.555 12 15.555a3.57 3.57 0 0 0 3.08-1.778l3.077 1.78A7.135 7.135 0 0 1 12 19.109zm7.109-6.714h-.79v.79h-.79v-.79h-.79v-.79h.79v-.79h.79v.79h.79v.79zm2.962 0h-.79v.79h-.79v-.79h-.789v-.79h.789v-.79h.79v.79h.79v.79z\",\n    C = \"M17.023 9.216s-.386-3.293-3.955-3.385c-3.57-.091-5.402 2.47-5.402 6.13 0 3.66 2.026 6.588 5.498 6.588 3.473 0 3.86-3.66 3.86-3.66l6.656.366s.391 3.306-2.394 5.828C18.5 23.605 15.082 24.017 12.694 24c-2.388-.018-5.698.034-8.9-2.969C.595 18.03.05 15.113.05 12.248c0-2.866.607-6.661 4.414-9.54C7.05.754 9.673.033 12.296.033 23.246.032 23.98 9.28 23.98 9.28z\",\n    Typescript = \"M0 12v12h24V0H0zm19.341-.956c.61.152 1.074.423 1.501.865.221.236.549.666.575.77.008.03-1.036.73-1.668 1.123-.023.015-.115-.084-.217-.236-.31-.45-.633-.644-1.128-.678-.728-.05-1.196.331-1.192.967a.88.88 0 0 0 .102.45c.16.331.458.53 1.39.933 1.719.74 2.454 1.227 2.911 1.92.51.773.625 2.008.278 2.926-.38.998-1.325 1.676-2.655 1.9-.411.073-1.386.062-1.828-.018-.964-.172-1.878-.648-2.442-1.273-.221-.243-.652-.88-.625-.925.011-.016.11-.077.22-.141.108-.061.511-.294.892-.515l.69-.4.145.214c.202.308.643.731.91.872.766.404 1.817.347 2.335-.118a.883.883 0 0 0 .313-.72c0-.278-.035-.4-.18-.61-.186-.266-.567-.49-1.649-.96-1.238-.533-1.771-.864-2.259-1.39a3.165 3.165 0 0 1-.659-1.2c-.091-.339-.114-1.189-.042-1.531.255-1.197 1.158-2.03 2.461-2.278.423-.08 1.406-.05 1.821.053zm-5.634 1.002l.008.983H10.59v8.876H8.38v-8.876H5.258v-.964c0-.534.011-.98.026-.99.012-.016 1.913-.024 4.217-.02l4.195.012z\",\n    React = \"M12 9.861A2.139 2.139 0 1 0 12 14.139 2.139 2.139 0 1 0 12 9.861zM6.008 16.255l-.472-.12C2.018 15.246 0 13.737 0 11.996s2.018-3.25 5.536-4.139l.472-.119.133.468a23.53 23.53 0 0 0 1.363 3.578l.101.213-.101.213a23.307 23.307 0 0 0-1.363 3.578l-.133.467zM5.317 8.95c-2.674.751-4.315 1.9-4.315 3.046 0 1.145 1.641 2.294 4.315 3.046a24.95 24.95 0 0 1 1.182-3.046A24.752 24.752 0 0 1 5.317 8.95zM17.992 16.255l-.133-.469a23.357 23.357 0 0 0-1.364-3.577l-.101-.213.101-.213a23.42 23.42 0 0 0 1.364-3.578l.133-.468.473.119c3.517.889 5.535 2.398 5.535 4.14s-2.018 3.25-5.535 4.139l-.473.12zm-.491-4.259c.48 1.039.877 2.06 1.182 3.046 2.675-.752 4.315-1.901 4.315-3.046 0-1.146-1.641-2.294-4.315-3.046a24.788 24.788 0 0 1-1.182 3.046zM5.31 8.945l-.133-.467C4.188 4.992 4.488 2.494 6 1.622c1.483-.856 3.864.155 6.359 2.716l.34.349-.34.349a23.552 23.552 0 0 0-2.422 2.967l-.135.193-.235.02a23.657 23.657 0 0 0-3.785.61l-.472.119zm1.896-6.63c-.268 0-.505.058-.705.173-.994.573-1.17 2.565-.485 5.253a25.122 25.122 0 0 1 3.233-.501 24.847 24.847 0 0 1 2.052-2.544c-1.56-1.519-3.037-2.381-4.095-2.381zM16.795 22.677c-.001 0-.001 0 0 0-1.425 0-3.255-1.073-5.154-3.023l-.34-.349.34-.349a23.53 23.53 0 0 0 2.421-2.968l.135-.193.234-.02a23.63 23.63 0 0 0 3.787-.609l.472-.119.134.468c.987 3.484.688 5.983-.824 6.854a2.38 2.38 0 0 1-1.205.308zm-4.096-3.381c1.56 1.519 3.037 2.381 4.095 2.381h.001c.267 0 .505-.058.704-.173.994-.573 1.171-2.566.485-5.254a25.02 25.02 0 0 1-3.234.501 24.674 24.674 0 0 1-2.051 2.545zM18.69 8.945l-.472-.119a23.479 23.479 0 0 0-3.787-.61l-.234-.02-.135-.193a23.414 23.414 0 0 0-2.421-2.967l-.34-.349.34-.349C14.135 1.778 16.515.767 18 1.622c1.512.872 1.812 3.37.824 6.855l-.134.468zM14.75 7.24c1.142.104 2.227.273 3.234.501.686-2.688.509-4.68-.485-5.253-.988-.571-2.845.304-4.8 2.208A24.849 24.849 0 0 1 14.75 7.24zM7.206 22.677A2.38 2.38 0 0 1 6 22.369c-1.512-.871-1.812-3.369-.823-6.854l.132-.468.472.119c1.155.291 2.429.496 3.785.609l.235.02.134.193a23.596 23.596 0 0 0 2.422 2.968l.34.349-.34.349c-1.898 1.95-3.728 3.023-5.151 3.023zm-1.19-6.427c-.686 2.688-.509 4.681.485 5.254.987.563 2.843-.305 4.8-2.208a24.998 24.998 0 0 1-2.052-2.545 24.976 24.976 0 0 1-3.233-.501zM12 16.878c-.823 0-1.669-.036-2.516-.106l-.235-.02-.135-.193a30.388 30.388 0 0 1-1.35-2.122 30.354 30.354 0 0 1-1.166-2.228l-.1-.213.1-.213a30.3 30.3 0 0 1 1.166-2.228c.414-.716.869-1.43 1.35-2.122l.135-.193.235-.02a29.785 29.785 0 0 1 5.033 0l.234.02.134.193a30.006 30.006 0 0 1 2.517 4.35l.101.213-.101.213a29.6 29.6 0 0 1-2.517 4.35l-.134.193-.234.02c-.847.07-1.694.106-2.517.106zm-2.197-1.084c1.48.111 2.914.111 4.395 0a29.006 29.006 0 0 0 2.196-3.798 28.585 28.585 0 0 0-2.197-3.798 29.031 29.031 0 0 0-4.394 0 28.477 28.477 0 0 0-2.197 3.798 29.114 29.114 0 0 0 2.197 3.798z\",\n    JavaScript = \"M0 0h24v24H0V0zm22.034 18.276c-.175-1.095-.888-2.015-3.003-2.873-.736-.345-1.554-.585-1.797-1.14-.091-.33-.105-.51-.046-.705.15-.646.915-.84 1.515-.66.39.12.75.42.976.9 1.034-.676 1.034-.676 1.755-1.125-.27-.42-.404-.601-.586-.78-.63-.705-1.469-1.065-2.834-1.034l-.705.089c-.676.165-1.32.525-1.71 1.005-1.14 1.291-.811 3.541.569 4.471 1.365 1.02 3.361 1.244 3.616 2.205.24 1.17-.87 1.545-1.966 1.41-.811-.18-1.26-.586-1.755-1.336l-1.83 1.051c.21.48.45.689.81 1.109 1.74 1.756 6.09 1.666 6.871-1.004.029-.09.24-.705.074-1.65l.046.067zm-8.983-7.245h-2.248c0 1.938-.009 3.864-.009 5.805 0 1.232.063 2.363-.138 2.711-.33.689-1.18.601-1.566.48-.396-.196-.597-.466-.83-.855-.063-.105-.11-.196-.127-.196l-1.825 1.125c.305.63.75 1.172 1.324 1.517.855.51 2.004.675 3.207.405.783-.226 1.458-.691 1.811-1.411.51-.93.402-2.07.397-3.346.012-2.054 0-4.109 0-6.179l.004-.056z\",\n    \"HTML 5\" = \"M1.5 0h21l-1.91 21.563L11.977 24l-8.564-2.438L1.5 0zm7.031 9.75l-.232-2.718 10.059.003.23-2.622L5.412 4.41l.698 8.01h9.126l-.326 3.426-2.91.804-2.955-.81-.188-2.11H6.248l.33 4.171L12 19.351l5.379-1.443.744-8.157H8.531z\",\n    \"CSS 3\" = \"M1.5 0h21l-1.91 21.563L11.977 24l-8.565-2.438L1.5 0zm17.09 4.413L5.41 4.41l.213 2.622 10.125.002-.255 2.716h-6.64l.24 2.573h6.182l-.366 3.523-2.91.804-2.956-.81-.188-2.11h-2.61l.29 3.855L12 19.288l5.373-1.53L18.59 4.414z\",\n    Redux = \"M16.633 16.504c.869-.075 1.543-.84 1.499-1.754-.046-.914-.795-1.648-1.708-1.648h-.061c-.943.031-1.678.824-1.648 1.769.03.479.226.869.494 1.153-1.048 2.038-2.621 3.536-5.004 4.795-1.603.838-3.296 1.154-4.944.929-1.378-.194-2.456-.81-3.116-1.798-.988-1.499-1.078-3.116-.255-4.734.601-1.169 1.499-2.023 2.099-2.443-.15-.389-.33-1.048-.42-1.542-4.436 3.177-3.985 7.521-2.637 9.574 1.004 1.498 3.057 2.456 5.304 2.456.599 0 1.229-.044 1.843-.194 3.896-.749 6.847-3.086 8.54-6.532l.014-.031zM21.981 12.758c-2.321-2.727-5.738-4.225-9.634-4.225h-.51c-.253-.554-.837-.899-1.497-.899h-.045c-.943 0-1.678.81-1.647 1.753.03.898.794 1.648 1.708 1.648h.074c.675-.03 1.259-.45 1.498-1.049h.555c2.309 0 4.495.674 6.488 1.992 1.527 1.004 2.622 2.322 3.236 3.896.538 1.288.509 2.547-.045 3.597-.854 1.647-2.293 2.517-4.195 2.517-1.199 0-2.367-.375-2.967-.644-.359.298-.959.793-1.394 1.093 1.318.598 2.652.943 3.94.943 2.922 0 5.093-1.647 5.918-3.236.898-1.798.824-4.824-1.469-7.416l-.014.03zM6.49 17.042c.029.899.793 1.648 1.708 1.648h.06c.959-.03 1.693-.823 1.648-1.768 0-.899-.779-1.647-1.693-1.647h-.061c-.06 0-.149 0-.225.029-1.243-2.098-1.768-4.346-1.572-6.771.119-1.828.719-3.417 1.797-4.735.899-1.124 2.592-1.679 3.746-1.708 3.236-.061 4.585 3.971 4.689 5.574l1.498.449c-.345-4.914-3.4-7.492-6.322-7.492-2.742 0-5.273 1.993-6.293 4.915-1.393 3.896-.479 7.641 1.229 10.638-.149.195-.239.539-.209.868z\",\n    SASS = \"M12 0c6.627 0 12 5.373 12 12s-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0zM9.615 15.998c.175.645.156 1.248-.024 1.792l-.065.18c-.024.061-.052.12-.078.176-.14.29-.326.56-.555.81-.698.759-1.672 1.047-2.09.805-.45-.262-.226-1.335.584-2.19.871-.918 2.12-1.509 2.12-1.509v-.003l.108-.061zm9.911-10.861c-.542-2.133-4.077-2.834-7.422-1.645-1.989.707-4.144 1.818-5.693 3.267C4.568 8.48 4.275 9.98 4.396 10.607c.427 2.211 3.457 3.657 4.703 4.73v.006c-.367.18-3.056 1.529-3.686 2.925-.675 1.47.105 2.521.615 2.655 1.575.436 3.195-.36 4.065-1.649.84-1.261.766-2.881.404-3.676.496-.135 1.08-.195 1.83-.104 2.101.24 2.521 1.56 2.43 2.1-.09.539-.523.854-.674.944-.15.091-.195.12-.181.181.015.09.091.09.21.075.165-.03 1.096-.45 1.141-1.471.045-1.29-1.186-2.729-3.375-2.7-.9.016-1.471.091-1.875.256-.03-.045-.061-.075-.105-.105-1.35-1.455-3.855-2.475-3.75-4.41.03-.705.285-2.564 4.8-4.814 3.705-1.846 6.661-1.335 7.171-.21.733 1.604-1.576 4.59-5.431 5.024-1.47.165-2.235-.404-2.431-.615-.209-.225-.239-.24-.314-.194-.12.06-.045.255 0 .375.12.3.585.825 1.396 1.095.704.225 2.43.359 4.5-.45 2.324-.899 4.139-3.405 3.614-5.505l.073.067z\",\n    //GitHub = \"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\",\n    GitHub = \"M23.546 10.93L13.067.452c-.604-.603-1.582-.603-2.188 0L8.708 2.627l2.76 2.76c.645-.215 1.379-.07 1.889.441.516.515.658 1.258.438 1.9l2.658 2.66c.645-.223 1.387-.078 1.9.435.721.72.721 1.884 0 2.604-.719.719-1.881.719-2.6 0-.539-.541-.674-1.337-.404-1.996L12.86 8.955v6.525c.176.086.342.203.488.348.713.721.713 1.883 0 2.6-.719.721-1.889.721-2.609 0-.719-.719-.719-1.879 0-2.598.182-.18.387-.316.605-.406V8.835c-.217-.091-.424-.222-.6-.401-.545-.545-.676-1.342-.396-2.009L7.636 3.7.45 10.881c-.6.605-.6 1.584 0 2.189l10.48 10.477c.604.604 1.582.604 2.186 0l10.43-10.43c.605-.603.605-1.582 0-2.187\",\n    Java = \"M8.851 18.56s-.917.534.653.714c1.902.218 2.874.187 4.969-.211 0 0 .552.346 1.321.646-4.699 2.013-10.633-.118-6.943-1.149M8.276 15.933s-1.028.761.542.924c2.032.209 3.636.227 6.413-.308 0 0 .384.389.987.602-5.679 1.661-12.007.13-7.942-1.218M13.116 11.475c1.158 1.333-.304 2.533-.304 2.533s2.939-1.518 1.589-3.418c-1.261-1.772-2.228-2.652 3.007-5.688 0-.001-8.216 2.051-4.292 6.573M19.33 20.504s.679.559-.747.991c-2.712.822-11.288 1.069-13.669.033-.856-.373.75-.89 1.254-.998.527-.114.828-.093.828-.093-.953-.671-6.156 1.317-2.643 1.887 9.58 1.553 17.462-.7 14.977-1.82M9.292 13.21s-4.362 1.036-1.544 1.412c1.189.159 3.561.123 5.77-.062 1.806-.152 3.618-.477 3.618-.477s-.637.272-1.098.587c-4.429 1.165-12.986.623-10.522-.568 2.082-1.006 3.776-.892 3.776-.892M17.116 17.584c4.503-2.34 2.421-4.589.968-4.285-.355.074-.515.138-.515.138s.132-.207.385-.297c2.875-1.011 5.086 2.981-.928 4.562 0-.001.07-.062.09-.118M14.401 0s2.494 2.494-2.365 6.33c-3.896 3.077-.888 4.832-.001 6.836-2.274-2.053-3.943-3.858-2.824-5.539 1.644-2.469 6.197-3.665 5.19-7.627M9.734 23.924c4.322.277 10.959-.153 11.116-2.198 0 0-.302.775-3.572 1.391-3.688.694-8.239.613-10.937.168 0-.001.553.457 3.393.639\",\n    \"C Sharp\" = \"M12 0A12 12 0 000 12a12 12 0 0012 12 12 12 0 0012-12A12 12 0 0012 0zM9.426 7.12a5.55 5.55 0 011.985.38v1.181a4.5 4.5 0 00-2.25-.566 3.439 3.439 0 00-2.625 1.087 4.099 4.099 0 00-1.012 2.906 3.9 3.9 0 00.945 2.754 3.217 3.217 0 002.482 1.023 4.657 4.657 0 002.464-.634l-.004 1.08a5.543 5.543 0 01-2.625.555 4.211 4.211 0 01-3.228-1.297 4.793 4.793 0 01-1.212-3.409 5.021 5.021 0 011.365-3.663 4.631 4.631 0 013.473-1.392 5.55 5.55 0 01.12-.004 5.55 5.55 0 01.122 0zm5.863.155h.836l-.555 2.652h1.661l.567-2.652h.81l-.555 2.652 1.732-.004-.15.697H17.91l-.412 1.98h1.852l-.176.698h-1.816l-.58 2.625h-.83l.567-2.625h-1.65l-.555 2.625h-.81l.555-2.625h-1.74l.131-.698h1.748l.401-1.976h-1.826l.138-.697h1.826zm.142 3.345L15 12.6h1.673l.423-1.98z\",\n    Python = \"M14.31.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.83l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.23l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05L0 11.97l.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.24-.01h.16l.06.01h8.16v-.83H6.24l-.01-2.75-.02-.37.05-.34.11-.31.17-.28.25-.26.31-.23.38-.2.44-.18.51-.15.58-.12.64-.1.71-.06.77-.04.84-.02 1.27.05 1.07.13zm-6.3 1.98l-.23.33-.08.41.08.41.23.34.33.22.41.09.41-.09.33-.22.23-.34.08-.41-.08-.41-.23-.33-.33-.22-.41-.09-.41.09-.33.22zM21.1 6.11l.28.06.32.12.35.18.36.27.36.35.35.47.32.59.28.73.21.88.14 1.04.05 1.23-.06 1.23-.16 1.04-.24.86-.32.71-.36.57-.4.45-.42.33-.42.24-.4.16-.36.09-.32.05-.24.02-.16-.01h-8.22v.82h5.84l.01 2.76.02.36-.05.34-.11.31-.17.29-.25.25-.31.24-.38.2-.44.17-.51.15-.58.13-.64.09-.71.07-.77.04-.84.01-1.27-.04-1.07-.14-.9-.2-.73-.25-.59-.3-.45-.33-.34-.34-.25-.34-.16-.33-.1-.3-.04-.25-.02-.2.01-.13v-5.34l.05-.64.13-.54.21-.46.26-.38.3-.32.33-.24.35-.2.35-.14.33-.1.3-.06.26-.04.21-.02.13-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01.21.03zm-6.47 14.25l-.23.33-.08.41.08.41.23.33.33.23.41.08.41-.08.33-.23.23-.33.08-.41-.08-.41-.23-.33-.33-.23-.41-.08-.41.08-.33.23z\",\n};\n\n//Enums for Large icon Paths\nenum largeImageStore {\n    Email = \"M511.872,195.725c-0.053-0.588-0.17-1.169-0.35-1.732c-0.117-0.503-0.28-0.994-0.486-1.468 c-0.239-0.463-0.525-0.901-0.853-1.306c-0.329-0.481-0.71-0.924-1.135-1.323c-0.137-0.119-0.196-0.282-0.341-0.401 l-82.065-63.735V59.704c0-14.138-11.462-25.6-25.6-25.6h-92.476L271.539,5.355c-9.147-7.134-21.974-7.134-31.121,0 l-37.035,28.749h-92.476c-14.138,0-25.6,11.461-25.6,25.6v66.057L3.268,189.496c-0.145,0.12-0.205,0.282-0.341,0.401 c-0.425,0.398-0.806,0.842-1.135,1.323c-0.328,0.405-0.614,0.842-0.853,1.306c-0.207,0.473-0.369,0.965-0.486,1.468 c-0.178,0.555-0.295,1.127-0.35,1.707c0,0.179-0.102,0.333-0.102,0.512V486.37c0.012,5.428,1.768,10.708,5.009,15.061 c0.051,0.077,0.06,0.171,0.119,0.239c0.06,0.068,0.188,0.145,0.273,0.239c4.794,6.308,12.25,10.027,20.173,10.061h460.8 c7.954-0.024,15.441-3.761,20.241-10.103c0.068-0.085,0.171-0.111,0.23-0.196c0.06-0.085,0.068-0.162,0.12-0.239 c3.241-4.354,4.997-9.634,5.009-15.061V196.237C511.974,196.058,511.881,195.904,511.872,195.725z M250.854,18.82 c2.98-2.368,7.2-2.368,10.18,0l19.686,15.283h-49.493L250.854,18.82z M27.725,494.904l223.13-173.321 c2.982-2.364,7.199-2.364,10.18,0l223.189,173.321H27.725z M494.908,481.6L271.539,308.117c-9.149-7.128-21.972-7.128-31.121,0 L17.041,481.6V209.233L156.877,317.82c3.726,2.889,9.088,2.211,11.977-1.515c2.889-3.726,2.211-9.088-1.515-11.977 L25.276,194.018l60.032-46.652v65.937c0,4.713,3.821,8.533,8.533,8.533c4.713,0,8.533-3.821,8.533-8.533v-153.6 c0-4.713,3.82-8.533,8.533-8.533h290.133c4.713,0,8.533,3.82,8.533,8.533v153.6c0,4.713,3.82,8.533,8.533,8.533 s8.533-3.821,8.533-8.533v-65.937l60.032,46.652l-142.31,110.507c-2.448,1.855-3.711,4.883-3.305,7.928s2.417,5.637,5.266,6.786 c2.849,1.149,6.096,0.679,8.501-1.232l140.083-108.774V481.6z M358.374,204.77v-34.133c0-56.554-45.846-102.4-102.4-102.4c-56.554,0-102.4,45.846-102.4,102.4 s45.846,102.4,102.4,102.4c4.713,0,8.533-3.82,8.533-8.533s-3.82-8.533-8.533-8.533c-47.128,0-85.333-38.205-85.333-85.333 s38.205-85.333,85.333-85.333s85.333,38.205,85.333,85.333v34.133c0,9.426-7.641,17.067-17.067,17.067 s-17.067-7.641-17.067-17.067v-34.133c0-4.713-3.82-8.533-8.533-8.533s-8.533,3.82-8.533,8.533 c0,18.851-15.282,34.133-34.133,34.133c-18.851,0-34.133-15.282-34.133-34.133s15.282-34.133,34.133-34.133 c4.713,0,8.533-3.82,8.533-8.533s-3.82-8.533-8.533-8.533c-22.915-0.051-43.074,15.13-49.354,37.168 c-6.28,22.038,2.847,45.565,22.347,57.601c19.5,12.036,44.622,9.65,61.507-5.843c1.858,18.046,17.543,31.464,35.659,30.505 C344.25,237.91,358.431,222.912,358.374,204.77z\",\n    Github = \"m256 0c-140.609375 0-256 115.390625-256 256 0 119.988281 84.195312 228.984375 196 256v-84.695312c-11.078125 2.425781-21.273438 2.496093-32.550781-.828126-15.128907-4.464843-27.421875-14.542968-36.546875-29.910156-5.816406-9.8125-16.125-20.453125-26.878906-19.671875l-2.636719-29.882812c23.253906-1.992188 43.371093 14.167969 55.3125 34.230469 5.304687 8.921874 11.410156 14.152343 19.246093 16.464843 7.574219 2.230469 15.707032 1.160157 25.183594-2.1875 2.378906-18.972656 11.070313-26.074219 17.636719-36.074219v-.015624c-66.679687-9.945313-93.253906-45.320313-103.800781-73.242188-13.976563-37.074219-6.476563-83.390625 18.238281-112.660156.480469-.570313 1.347656-2.0625 1.011719-3.105469-11.332032-34.230469 2.476562-62.546875 2.984375-65.550781 13.078125 3.867187 15.203125-3.890625 56.808593 21.386718l7.191407 4.320313c3.007812 1.792969 2.0625.769531 5.070312.542969 17.371094-4.71875 35.683594-7.324219 53.726563-7.558594 18.179687.234375 36.375 2.839844 54.464844 7.75l2.328124.234375c-.203124-.03125.632813-.148437 2.035157-.984375 51.972656-31.480469 50.105469-21.191406 64.042969-25.722656.503906 3.007812 14.128906 31.785156 2.917968 65.582031-1.511718 4.65625 45.058594 47.300781 19.246094 115.753906-10.546875 27.933594-37.117188 63.308594-103.796875 73.253907v.015624c8.546875 13.027344 18.816406 19.957032 18.761719 46.832032v105.722656c111.808594-27.015625 196-136.011719 196-256 .003906-140.609375-115.386719-256-255.996094-256zm0 0\",\n    LinkedIn = \"M503.983,92.994c4.428,0,8.017-3.589,8.017-8.017V42.221C512,18.941,493.059,0,469.779,0H42.221 C18.941,0,0,18.941,0,42.221v427.557C0,493.059,18.941,512,42.221,512h427.557C493.059,512,512,493.059,512,469.779V119.182 c0-4.427-3.588-8.017-8.017-8.017c-4.428,0-8.017,3.589-8.017,8.017v350.597c0,14.44-11.747,26.188-26.188,26.188H42.221 c-14.44,0-26.188-11.748-26.188-26.188V42.221c0-14.44,11.748-26.188,26.188-26.188h427.557c14.441,0,26.188,11.748,26.188,26.188 v42.756C495.967,89.405,499.555,92.994,503.983,92.994z M153.386,238.898c4.427,0,8.017-3.589,8.017-8.017v-34.739c0-4.427-3.589-8.017-8.017-8.017H84.977 c-4.427,0-8.017,3.589-8.017,8.017v230.881c0,4.427,3.589,8.017,8.017,8.017h68.409c4.427,0,8.017-3.589,8.017-8.017V266.154 c0-4.427-3.589-8.017-8.017-8.017s-8.017,3.589-8.017,8.017v152.852H92.994V204.159h52.376v26.722 C145.37,235.308,148.959,238.898,153.386,238.898z M408.05,210.086c-16.319-13.956-37.454-21.96-57.987-21.96c-33.891,0-55.359,11.268-68.944,25.151v-17.134 c0-4.427-3.588-8.017-8.017-8.017h-68.409c-4.427,0-8.017,3.589-8.017,8.017v230.881c0,4.427,3.589,8.017,8.017,8.017h68.409 c4.428,0,8.017-3.589,8.017-8.017V315.858c0-21.457,18.032-34.739,34.739-34.739c20.129,0,34.739,14.61,34.739,34.739v111.165 c0,4.427,3.588,8.017,8.017,8.017h68.409c4.428,0,8.017-3.589,8.017-8.017V264.551C435.04,244.315,425.454,224.972,408.05,210.086 z M419.006,419.006H366.63V315.858c0-28.946-21.828-50.772-50.772-50.772c-24.418,0-50.772,19.412-50.772,50.772v103.148H212.71 V204.159h52.376v34.739c0,3.656,2.573,6.926,6.125,7.789c3.66,0.888,7.55-0.973,9.15-4.385 c11.871-25.31,35.323-38.143,69.703-38.143c32.545,0,68.944,25.828,68.944,60.392V419.006z M119.182,76.96c-23.281,0-42.221,18.941-42.221,42.221s18.941,42.221,42.221,42.221s42.221-18.941,42.221-42.221 S142.462,76.96,119.182,76.96z M119.182,145.37c-14.44,0-26.188-11.748-26.188-26.188s11.748-26.188,26.188-26.188 s26.188,11.748,26.188,26.188S133.621,145.37,119.182,145.37z\",\n    Phone = \"M436.992,74.953c-99.989-99.959-262.08-99.935-362.039,0.055s-99.935,262.08,0.055,362.039s262.08,99.935,362.039-0.055 c48.006-48.021,74.968-113.146,74.953-181.047C511.986,188.055,485.005,122.951,436.992,74.953z M387.703,356.605 c-0.011,0.011-0.022,0.023-0.034,0.034v-0.085l-12.971,12.885c-16.775,16.987-41.206,23.976-64.427,18.432 c-23.395-6.262-45.635-16.23-65.877-29.525c-18.806-12.019-36.234-26.069-51.968-41.899 c-14.477-14.371-27.483-30.151-38.827-47.104c-12.408-18.242-22.229-38.114-29.184-59.051 c-7.973-24.596-1.366-51.585,17.067-69.717l15.189-15.189c4.223-4.242,11.085-4.257,15.326-0.034 c0.011,0.011,0.023,0.022,0.034,0.034l47.957,47.957c4.242,4.223,4.257,11.085,0.034,15.326c-0.011,0.011-0.022,0.022-0.034,0.034 l-28.16,28.16c-8.08,7.992-9.096,20.692-2.389,29.867c10.185,13.978,21.456,27.131,33.707,39.339 c13.659,13.718,28.508,26.197,44.373,37.291c9.167,6.394,21.595,5.316,29.525-2.56l27.221-27.648 c4.223-4.242,11.085-4.257,15.326-0.034c0.011,0.011,0.022,0.022,0.034,0.034l48.043,48.128 C391.911,345.502,391.926,352.363,387.703,356.605z\",\n    Text = \"M 251.167969 87.203125 C 153.957031 87.203125 74.867188 159.792969 74.867188 249.015625 C 74.867188 290.488281 91.734375 329.523438 122.503906 359.625 C 110.542969 390.847656 99.464844 403.117188 94.699219 403.660156 C 90.023438 404.179688 86.402344 407.988281 86.121094 412.699219 C 85.851562 417.40625 89.011719 421.617188 93.609375 422.671875 C 93.984375 422.757812 103.105469 424.824219 116.496094 424.824219 C 136.191406 424.824219 164.234375 420.46875 188.929688 400.441406 C 208.855469 407.347656 229.773438 410.847656 251.179688 410.847656 C 348.390625 410.847656 427.480469 338.257812 427.480469 249.035156 C 427.480469 159.792969 348.371094 87.203125 251.167969 87.203125 Z M 156.410156 299.714844 C 145.882812 299.714844 135.476562 296.980469 130.28125 294.089844 L 134.519531 276.867188 C 140.132812 279.734375 148.75 282.613281 157.636719 282.613281 C 167.210938 282.613281 172.273438 278.644531 172.273438 272.625 C 172.273438 266.878906 167.898438 263.59375 156.816406 259.632812 C 141.496094 254.300781 131.507812 245.816406 131.507812 232.410156 C 131.507812 216.683594 144.636719 204.636719 166.390625 204.636719 C 176.785156 204.636719 184.445312 206.828125 189.921875 209.28125 L 185.277344 226.109375 C 181.585938 224.332031 175.015625 221.734375 165.984375 221.734375 C 156.953125 221.734375 152.574219 225.839844 152.574219 230.621094 C 152.574219 236.503906 157.773438 239.105469 169.675781 243.617188 C 185.953125 249.632812 193.613281 258.117188 193.613281 271.117188 C 193.613281 286.585938 181.722656 299.714844 156.410156 299.714844 Z M 287.039062 298.339844 L 285.65625 263.050781 C 285.261719 251.972656 284.847656 238.554688 284.847656 225.164062 L 284.429688 225.164062 C 281.5625 236.929688 277.734375 250.058594 274.171875 260.867188 L 262.957031 296.855469 L 246.679688 296.855469 L 236.824219 261.148438 C 233.808594 250.339844 230.671875 237.210938 228.476562 225.171875 L 228.207031 225.171875 C 227.65625 237.625 227.25 251.835938 226.566406 263.34375 L 224.921875 298.359375 L 205.628906 298.359375 L 211.515625 206.164062 L 239.289062 206.164062 L 248.320312 236.941406 C 251.1875 247.605469 254.066406 259.101562 256.117188 269.921875 L 256.523438 269.921875 C 259.121094 259.253906 262.269531 247.074219 265.273438 236.816406 L 275.128906 206.171875 L 302.351562 206.171875 L 307.402344 298.371094 Z M 359.261719 243.625 C 375.539062 249.644531 383.199219 258.125 383.199219 271.117188 C 383.199219 286.585938 371.304688 299.703125 345.976562 299.703125 C 335.445312 299.703125 325.050781 296.980469 319.84375 294.101562 L 324.085938 276.867188 C 329.699219 279.734375 338.316406 282.613281 347.203125 282.613281 C 356.785156 282.613281 361.847656 278.644531 361.847656 272.625 C 361.847656 266.878906 357.472656 263.59375 346.390625 259.632812 C 331.070312 254.300781 321.074219 245.816406 321.074219 232.410156 C 321.074219 216.683594 334.199219 204.636719 355.957031 204.636719 C 366.351562 204.636719 374.011719 206.828125 379.5 209.28125 L 374.851562 226.109375 C 371.160156 224.332031 364.59375 221.734375 355.570312 221.734375 C 346.527344 221.734375 342.152344 225.839844 342.152344 230.621094 C 342.160156 236.515625 347.359375 239.113281 359.261719 243.625 Z M 463.699219 0 L 48.300781 0 C 21.667969 0 0 21.667969 0 48.300781 L 0 463.699219 C 0 490.332031 21.667969 512 48.300781 512 L 463.699219 512 C 490.332031 512 512 490.332031 512 463.699219 L 512 48.300781 C 512 21.667969 490.332031 0 463.699219 0 Z M 492.679688 463.699219 C 492.679688 479.675781 479.675781 492.679688 463.699219 492.679688 L 48.300781 492.679688 C 32.324219 492.679688 19.320312 479.675781 19.320312 463.699219 L 19.320312 48.300781 C 19.320312 32.324219 32.324219 19.320312 48.300781 19.320312 L 463.699219 19.320312 C 479.675781 19.320312 492.679688 32.324219 492.679688 48.300781 Z M 492.679688 463.699219 \",\n}\n\nexport function SmallIcons (icon:string, name?:string){\n    return (\n        <svg className={name ? name : \"icon\"} viewBox={\"0 0 24 24\"} xmlns=\"http://www.w3.org/2000/svg\" >\n            {getSmallImage(icon)}\n        </svg>\n    );\n}\n\nfunction getSmallImage(theIcon:string) {\n    let temp = theIcon;\n    let keytemp = temp as keyof typeof smallImageStore;\n    return (<path className=\"icon\" d={smallImageStore[keytemp]}/>);\n}\n\nexport function LargeIcons (icon:string, name?:string) {\n    return (\n        <svg className={name ? name : \"icon\"} viewBox={\"0 0 512 512\"} xmlns=\"http://www.w3.org/2000/svg\" >\n            {getLrgImage(icon)}\n        </svg>\n    );\n}\n\nfunction getLrgImage(theIcon:string) {\n    let temp = theIcon;\n    let keytemp = temp as keyof typeof largeImageStore;\n    return (<path className=\"icon\" d={largeImageStore[keytemp]}/>);\n}\n\nexport function SectionIcons (theIcon:string) {\n    let height = \"40px\", width = \"40px\";\n    if(theIcon === \"About\") {\n        return (\n            <svg height={height} viewBox=\"-50 0 512 512\" width={width}  xmlns=\"http://www.w3.org/2000/svg\" >\n                <path d=\"m376.785156 352.988281-113.070312-42.78125v-28.203125c0-14.359375 7.164062-27.90625 19.167968-36.242187 36.335938-25.238281 58.027344-66.683594 58.027344-110.863281 0-57.863282-36.796875-109.21875-91.5625-127.789063-5.226562-1.769531-10.910156 1.027344-12.683594 6.261719-1.773437 5.230468 1.027344 10.90625 6.257813 12.679687 46.648437 15.816407 77.988281 59.558594 77.988281 108.847657 0 37.632812-18.484375 72.9375-49.441406 94.4375-14.574219 10.125-24.226562 25.605468-26.960938 42.667968h-76.988281c-2.691406-17.109375-12.207031-32.496094-26.585937-42.398437-31.894532-21.953125-50.515625-58.160157-49.8125-96.847657.875-48.136718 32.242187-90.996093 78.050781-106.652343 5.226563-1.785157 8.015625-7.46875 6.230469-12.695313-1.789063-5.226562-7.472656-8.015625-12.699219-6.230468-53.75 18.371093-90.550781 68.691406-91.578125 125.214843-.828125 45.414063 21.03125 87.914063 58.46875 113.6875 11.710938 8.0625 18.707031 21.492188 18.707031 35.925781v28.203126l-113.070312 42.777343c-21.402344 8.097657-35.230469 26.773438-35.230469 47.574219v101.433594c0 5.523437 4.476562 10 10 10h155.726562c.011719 0 .023438.003906.039063.003906.011719 0 .027344-.003906.042969-.003906h80.398437c.015625 0 .03125.003906.042969.003906s.027344-.003906.039062-.003906h155.726563c5.519531 0 10-4.476563 10-10v-101.433594c-.003906-20.804688-13.832031-39.476562-35.230469-47.574219zm-133.074218-60.984375v16h-75.410157v-16zm-48.378907 36-27.03125 27.066406v-27.066406zm2.308594 75.546875h16.730469l19.449218 88.445313h-55.628906zm18.839844-20h-20.945313l-9.695312-17.738281 20.167968-20.191406 20.164063 20.191406zm27.230469-28.476562-27.03125-27.070313h27.03125zm-223.710938 45.488281c0-12.410156 8.757812-23.742188 22.308594-28.867188l105.992187-40.105468v47.648437c0 4.046875 2.4375 7.691407 6.175781 9.242188 3.742188 1.546875 8.042969.6875 10.898438-2.175781l5.734375-5.738282 7.921875 14.496094-21.316406 96.933594h-73.972656v-66.335938c0-5.519531-4.476563-10-10-10-5.523438 0-10 4.480469-10 10v66.335938h-43.742188zm372.011719 91.433594h-43.742188v-66.335938c0-5.519531-4.476562-10-10-10-5.519531 0-10 4.480469-10 10v66.335938h-73.96875l-21.320312-96.933594 7.925781-14.5 5.730469 5.742188c1.914062 1.914062 4.472656 2.933593 7.078125 2.933593 1.285156 0 2.585937-.25 3.820312-.761719 3.738282-1.546874 6.175782-5.191406 6.175782-9.238281v-47.648437l105.992187 40.101562c13.554687 5.128906 22.308594 16.460938 22.308594 28.871094zm0 0\"/>\n                <path d=\"m161.773438 109.386719c0 5.519531 4.476562 10 10 10 5.519531 0 10-4.480469 10-10 0-6.882813 2.941406-13.464844 8.074218-18.0625 5.199219-4.65625 11.933594-6.796875 18.957032-6.019531 11.285156 1.246093 20.035156 9.996093 21.28125 21.28125 1.269531 11.484374-5.433594 22.078124-16.296876 25.757812-10.636718 3.605469-17.78125 13.707031-17.78125 25.136719v8.519531c0 5.519531 4.476563 10 10 10 5.519532 0 10-4.480469 10-10v-8.519531c0-2.808594 1.726563-5.355469 4.203126-6.191407 19.828124-6.722656 32.0625-26.007812 29.753906-46.898437-2.28125-20.660156-18.304688-36.683594-38.964844-38.964844-12.566406-1.386719-25.144531 2.621094-34.496094 11-9.363281 8.386719-14.730468 20.398438-14.730468 32.960938zm0 0\"/>\n                <path d=\"m206.007812 194.988281c-2.632812 0-5.210937 1.066407-7.070312 2.929688-1.863281 1.859375-2.929688 4.4375-2.929688 7.070312 0 2.628907 1.066407 5.210938 2.929688 7.066407 1.859375 1.863281 4.4375 2.933593 7.070312 2.933593 2.628907 0 5.207032-1.070312 7.066407-2.933593 1.863281-1.855469 2.933593-4.4375 2.933593-7.066407 0-2.632812-1.070312-5.210937-2.933593-7.070312-1.859375-1.859375-4.4375-2.929688-7.066407-2.929688zm0 0\"/>\n                <path d=\"m207.207031 20c2.628907 0 5.210938-1.066406 7.070313-2.929688 1.859375-1.859374 2.929687-4.441406 2.929687-7.070312 0-2.640625-1.070312-5.210938-2.929687-7.070312-1.871094-1.859376-4.441406-2.929688-7.070313-2.929688-2.632812 0-5.210937 1.070312-7.070312 2.929688-1.871094 1.859374-2.929688 4.441406-2.929688 7.070312s1.058594 5.210938 2.929688 7.070312c1.859375 1.863282 4.429687 2.929688 7.070312 2.929688zm0 0\"/>\n            </svg>);\n    } else if (theIcon === \"Skills\") {\n        return(<svg height={height} viewBox=\"0 0 512 512\" width={width} xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"m150.664062 136.429688-26.070312 26.070312-6.019531-6.019531c-3.90625-3.90625-10.238281-3.90625-14.144531 0-3.90625 3.902343-3.90625 10.234375 0 14.140625l13.09375 13.09375c1.953124 1.949218 4.511718 2.925781 7.070312 2.925781s5.117188-.976563 7.070312-2.925781l33.144532-33.144532c3.902344-3.90625 3.902344-10.234374 0-14.140624-3.910156-3.90625-10.238282-3.90625-14.144532 0zm0 0\"/><path d=\"m202 153.5h95.5c5.519531 0 10-4.476562 10-10s-4.480469-10-10-10h-95.5c-5.523438 0-10 4.476562-10 10s4.476562 10 10 10zm0 0\"/><path d=\"m202 193.5h45.25c5.519531 0 10-4.476562 10-10s-4.480469-10-10-10h-45.25c-5.523438 0-10 4.476562-10 10s4.476562 10 10 10zm0 0\"/><path d=\"m150.664062 240.429688-26.070312 26.070312-6.019531-6.019531c-3.90625-3.90625-10.238281-3.90625-14.144531 0-3.90625 3.902343-3.90625 10.234375 0 14.140625l13.09375 13.09375c1.953124 1.949218 4.511718 2.925781 7.070312 2.925781s5.117188-.976563 7.070312-2.925781l33.144532-33.144532c3.902344-3.90625 3.902344-10.234374 0-14.140624-3.910156-3.90625-10.238282-3.90625-14.144532 0zm0 0\"/><path d=\"m202 297.5h45.25c5.519531 0 10-4.476562 10-10s-4.480469-10-10-10h-45.25c-5.523438 0-10 4.476562-10 10s4.476562 10 10 10zm0 0\"/><path d=\"m150.664062 345.429688-26.070312 26.070312-6.019531-6.019531c-3.90625-3.90625-10.238281-3.90625-14.144531 0-3.90625 3.902343-3.90625 10.234375 0 14.140625l13.09375 13.09375c1.953124 1.949218 4.511718 2.925781 7.070312 2.925781s5.117188-.976563 7.070312-2.925781l33.144532-33.144532c3.902344-3.90625 3.902344-10.234374 0-14.140624-3.910156-3.90625-10.238282-3.90625-14.144532 0zm0 0\"/><path d=\"m202 362.5h95.5c5.519531 0 10-4.476562 10-10s-4.480469-10-10-10h-95.5c-5.523438 0-10 4.476562-10 10s4.476562 10 10 10zm0 0\"/><path d=\"m202 402.5h45.25c5.519531 0 10-4.476562 10-10s-4.480469-10-10-10h-45.25c-5.523438 0-10 4.476562-10 10s4.476562 10 10 10zm0 0\"/><path d=\"m512 256c0-59.769531-48.355469-108.449219-108-108.988281v-67.511719c0-27.570312-22.429688-50-50-50h-105.515625c-7.960937-17.695312-25.742187-29.5-45.605469-29.5h-1.757812c-19.863282 0-37.644532 11.804688-45.605469 29.5h-105.515625c-27.570312 0-50 22.429688-50 50v382.5c0 27.570312 22.429688 50 50 50h304c27.570312 0 50-22.429688 50-50v-97.011719c26.929688-.246093 51.554688-10.296875 70.46875-26.757812.554688-.398438 1.058594-.847657 1.511719-1.34375 22.105469-19.960938 36.019531-48.828125 36.019531-80.886719zm-20 0c0 21.175781-7.4375 40.640625-19.828125 55.9375-8.394531-16.066406-22.132813-28.621094-38.578125-35.65625 6.496094-7.265625 10.457031-16.839844 10.457031-27.328125v-7.761719c0-22.636718-18.414062-41.050781-41.050781-41.050781-22.632812 0-41.046875 18.414063-41.046875 41.050781v7.761719c0 10.488281 3.957031 20.0625 10.453125 27.328125-16.445312 7.035156-30.183594 19.589844-38.578125 35.65625-12.390625-15.296875-19.828125-34.761719-19.828125-55.9375 0-49.074219 39.925781-89 89-89s89 39.925781 89 89zm-142.964844 70.722656c8.632813-21.902344 29.988282-36.722656 53.964844-36.722656s45.332031 14.820312 53.964844 36.722656c-14.980469 11.457032-33.691406 18.277344-53.964844 18.277344s-38.984375-6.820312-53.964844-18.277344zm32.917969-77.769531v-7.761719c0-11.605468 9.441406-21.050781 21.046875-21.050781s21.050781 9.441406 21.050781 21.050781v7.761719c0 11.605469-9.445312 21.046875-21.050781 21.046875s-21.046875-9.441406-21.046875-21.046875zm2.046875-169.453125v69.160156c-9.851562 1.738282-19.246094 4.804688-28 9.003906v-70.164062c0-5.523438-4.476562-10-10-10h-54v-20.75c0-2.511719-.347656-4.941406-.988281-7.25h62.988281c16.542969 0 30 13.457031 30 30zm-221.476562-30c4.515624 0 8.46875-3.023438 9.652343-7.382812 3.535157-13.019532 15.4375-22.117188 28.945313-22.117188h1.757812c13.507813 0 25.410156 9.097656 28.945313 22.117188 1.183593 4.359374 5.136719 7.382812 9.648437 7.382812h23.277344c3.996094 0 7.25 3.253906 7.25 7.25v20.75h-140v-20.75c0-3.996094 3.253906-7.25 7.25-7.25zm191.476562 442.5h-304c-16.542969 0-30-13.457031-30-30v-382.5c0-16.542969 13.457031-30 30-30h62.988281c-.640625 2.308594-.988281 4.738281-.988281 7.25v20.75h-54c-5.523438 0-10 4.476562-10 10v366.5c0 5.523438 4.476562 10 10 10h104c5.523438 0 10-4.476562 10-10s-4.476562-10-10-10h-94v-346.5h268v72.582031c-20.925781 16.355469-35.746094 40.175781-40.421875 67.417969h-93.578125c-5.523438 0-10 4.476562-10 10s4.476562 10 10 10h92.019531c.425781 31.464844 14.246094 59.753906 36.015625 79.402344.445313.484375.941406.925781 1.484375 1.316406 1.457031 1.273438 2.953125 2.503906 4.480469 3.699219v102.082031h-94c-5.523438 0-10 4.476562-10 10s4.476562 10 10 10h104c5.523438 0 10-4.476562 10-10v-99.664062c8.753906 4.199218 18.148438 7.265624 28 9.003906v98.660156c0 16.542969-13.457031 30-30 30zm0 0\"/><path d=\"m202 58.75c2.628906 0 5.210938-1.070312 7.070312-2.929688 1.859376-1.859374 2.929688-4.441406 2.929688-7.070312s-1.070312-5.210938-2.929688-7.070312c-1.859374-1.859376-4.441406-2.929688-7.070312-2.929688s-5.210938 1.070312-7.070312 2.929688c-1.859376 1.859374-2.929688 4.441406-2.929688 7.070312s1.070312 5.210938 2.929688 7.070312c1.859374 1.859376 4.441406 2.929688 7.070312 2.929688zm0 0\"/><path d=\"m202 444c-2.628906 0-5.210938 1.070312-7.070312 2.929688-1.859376 1.859374-2.929688 4.441406-2.929688 7.070312s1.070312 5.210938 2.929688 7.070312c1.859374 1.859376 4.441406 2.929688 7.070312 2.929688s5.210938-1.070312 7.070312-2.929688c1.859376-1.859374 2.929688-4.441406 2.929688-7.070312s-1.070312-5.210938-2.929688-7.070312c-1.859374-1.859376-4.441406-2.929688-7.070312-2.929688zm0 0\"/>\n        </svg>);\n    } else if (theIcon === \"Portfolio\") {\n        return(<svg height={height} viewBox=\"0 -20 512 512\" width={width}  xmlns=\"http://www.w3.org/2000/svg\" >\n            <path d=\"m482 0h-160.054688c-9.34375 0-18.285156 4.445312-23.921874 11.894531l-46.996094 62.105469h-221.027344c-16.542969 0-30 13.457031-30 30v318c0 27.570312 22.429688 50 50 50h412c27.570312 0 50-22.429688 50-50v-392c0-16.542969-13.457031-30-30-30zm10 422c0 16.542969-13.457031 30-30 30h-372.023438c6.289063-8.363281 10.023438-18.753906 10.023438-30v-264c0-5.515625 4.484375-10 10-10h146.410156c5.519532 0 10-4.476562 10-10s-4.480468-10-10-10h-146.410156c-16.542969 0-30 13.457031-30 30v264c0 16.542969-13.457031 30-30 30s-30-13.457031-30-30v-318c0-5.515625 4.484375-10 10-10h226c3.132812 0 6.085938-1.46875 7.972656-3.964844l50-66.070312c1.878906-2.480469 4.859375-3.964844 7.972656-3.964844h160.054688c5.515625 0 10 4.488281 10 10v98h-155.585938c-5.523437 0-10 4.476562-10 10s4.476563 10 10 10h155.585938zm0 0\"/><path d=\"m296.410156 148c2.628906 0 5.210938-1.070312 7.070313-2.929688 1.859375-1.859374 2.929687-4.441406 2.929687-7.070312s-1.070312-5.210938-2.929687-7.070312c-1.859375-1.859376-4.441407-2.929688-7.070313-2.929688-2.632812 0-5.210937 1.070312-7.070312 2.929688-1.859375 1.859374-2.929688 4.441406-2.929688 7.070312s1.070313 5.210938 2.929688 7.070312c1.859375 1.859376 4.4375 2.929688 7.070312 2.929688zm0 0\"/><path d=\"m187.40625 307.03125c0 32.066406 13.921875 60.941406 36.035156 80.902344.445313.488281.945313.925781 1.484375 1.320312 19.152344 16.671875 44.160157 26.777344 71.480469 26.777344s52.320312-10.101562 71.472656-26.769531c.550782-.398438 1.058594-.847657 1.511719-1.339844 22.101563-19.964844 36.015625-48.832031 36.015625-80.890625 0-60.101562-48.894531-109-109-109-60.101562 0-109 48.898438-109 109zm55.039062 70.722656c8.628907-21.902344 29.984376-36.722656 53.960938-36.722656 23.980469 0 45.332031 14.820312 53.964844 36.722656-14.980469 11.460938-33.6875 18.277344-53.964844 18.277344-20.273438 0-38.980469-6.820312-53.960938-18.277344zm32.914063-77.769531v-7.761719c0-11.609375 9.441406-21.050781 21.046875-21.050781 11.609375 0 21.050781 9.441406 21.050781 21.050781v7.761719c0 11.605469-9.441406 21.046875-21.050781 21.046875-11.605469 0-21.046875-9.441406-21.046875-21.046875zm110.046875 7.046875c0 21.175781-7.433594 40.640625-19.828125 55.9375-8.394531-16.066406-22.128906-28.621094-38.574219-35.65625 6.492188-7.261719 10.453125-16.839844 10.453125-27.328125v-7.761719c0-22.632812-18.414062-41.050781-41.050781-41.050781-22.632812 0-41.046875 18.417969-41.046875 41.050781v7.761719c0 10.488281 3.957031 20.066406 10.453125 27.328125-16.445312 7.035156-30.183594 19.59375-38.574219 35.65625-12.394531-15.292969-19.832031-34.761719-19.832031-55.9375 0-49.074219 39.925781-89 89-89 49.078125 0 89 39.925781 89 89zm0 0\"/>\n        </svg>);\n    } else if (theIcon === \"Contact\") {\n        return(<svg height={height} viewBox=\"0 -20 512 512\" width={width}  xmlns=\"http://www.w3.org/2000/svg\" >\n            <path d=\"m264.976562 212.519531h23.335938v19.003907c0 4.042968 2.4375 7.691406 6.171875 9.238281 1.238281.511719 2.539063.761719 3.828125.761719 2.601562 0 5.160156-1.015626 7.070312-2.929688l26.074219-26.074219h129.539063c28.121094 0 51.003906-22.878906 51.003906-51.003906v-110.011719c0-28.125-22.882812-51.003906-51.003906-51.003906h-196.019532c-28.125 0-51.007812 22.878906-51.007812 51.003906v110.011719c0 28.125 22.882812 51.003906 51.007812 51.003906zm-31.003906-161.015625c0-17.09375 13.90625-31.003906 31.003906-31.003906h196.019532c17.09375 0 31 13.910156 31 31.003906v110.011719c0 17.09375-13.90625 31.003906-31 31.003906h-133.679688c-2.652344 0-5.195312 1.054688-7.074218 2.929688l-11.929688 11.929687v-4.859375c0-5.523437-4.476562-10-10-10h-33.335938c-17.097656 0-31.003906-13.910156-31.003906-31.003906zm0 0\"/><path d=\"m266.917969 167.351562h104.011719c5.519531 0 10-4.480468 10-10.003906v-15.820312c0-18.800782-13.214844-34.5625-30.839844-38.515625 2.480468-4.808594 3.890625-10.25 3.890625-16.019531v-6.265626c0-19.332031-15.726563-35.058593-35.058594-35.058593-19.328125 0-35.054687 15.726562-35.054687 35.058593v6.265626c0 5.769531 1.410156 11.210937 3.890624 16.019531-17.628906 3.953125-30.839843 19.714843-30.839843 38.515625v15.820312c0 5.523438 4.476562 10.003906 10 10.003906zm36.949219-86.625c0-8.300781 6.753906-15.054687 15.054687-15.054687s15.054687 6.753906 15.054687 15.054687v6.265626c0 8.300781-6.753906 15.054687-15.054687 15.054687s-15.054687-6.753906-15.054687-15.054687zm-26.949219 60.800782c0-10.742188 8.738281-19.480469 19.480469-19.480469h45.046874c10.742188 0 19.480469 8.738281 19.480469 19.480469v5.820312h-84.007812zm0 0\"/><path d=\"m411.988281 82.042969h42.339844c5.519531 0 10-4.476563 10-10 0-5.523438-4.480469-10-10-10h-42.339844c-5.519531 0-10 4.476562-10 10 0 5.523437 4.480469 10 10 10zm0 0\"/><path d=\"m411.988281 122.046875h42.339844c5.519531 0 10-4.476563 10-10s-4.480469-10-10-10h-42.339844c-5.519531 0-10 4.476563-10 10s4.480469 10 10 10zm0 0\"/><path d=\"m411.988281 162.050781h42.339844c5.519531 0 10-4.476562 10-10 0-5.523437-4.480469-10-10-10h-42.339844c-5.519531 0-10 4.476563-10 10 0 5.523438 4.480469 10 10 10zm0 0\"/><path d=\"m509.070312 455.28125-22.4375-22.4375c-3.242187-3.242188-7.550781-5.027344-12.136718-5.027344-4.585938 0-8.898438 1.785156-12.140625 5.027344l-16.085938 16.085938-16.113281-16.113282c-6.695312-6.691406-17.585938-6.691406-24.277344 0l-16.007812 16.007813-16.921875-16.921875c-6.695313-6.691406-17.585938-6.691406-24.277344 0l-14.445313 14.445312-21.875-37.078125 11.71875-7.882812c.007813-.007813.019532-.011719.027344-.019531l1.382813-.929688c13.359375-8.992188 21.914062-23.339844 23.464843-39.371094 1.550782-16.027344-4.089843-31.75-15.472656-43.136718l-41.289062-41.289063c-18.683594-18.679687-48.761719-20.890625-69.972656-5.140625l-26.722657 19.84375c-2.023437 1.503906-4.890625 1.292969-6.671875-.488281l-47.179687-47.179688c-1.78125-1.78125-1.992188-4.648437-.492188-6.671875l19.847657-26.722656c15.75-21.210938 13.539062-51.292969-5.140626-69.96875l-41.289062-41.292969c-11.386719-11.386719-27.113281-17.023437-43.140625-15.472656s-30.375 10.105469-39.367187 23.464844l-1.210938 1.800781c-.011719.015625-.023438.03125-.03125.046875l-14.992188 22.28125c-24.8125 36.875-20.011718 86.449219 11.414063 117.875l49.835937 49.832031c3.90625 3.90625 10.238282 3.90625 14.144532 0 3.90625-3.902344 3.90625-10.238281 0-14.144531l-49.835938-49.832031c-24.679687-24.679688-28.449218-63.609375-8.964844-92.5625l8.28125-12.304688 88.945313 88.945313-4.554687 6.132812c-7.367188 9.921875-6.332032 24 2.40625 32.738281l47.179687 47.175782c8.738281 8.742187 22.8125 9.777344 32.738281 2.40625l6.546875-4.855469 88.960938 88.960937-12.734375 8.570313c-28.957032 19.484375-67.886719 15.714844-92.5625-8.964844l-49.832032-49.832031c-3.90625-3.902344-10.234374-3.902344-14.144531 0-3.90625 3.90625-3.90625 10.238281 0 14.144531l49.832031 49.832031c17.972657 17.972657 41.871094 27.234376 65.945313 27.234376 15.871094 0 31.816406-4.035157 46.175781-12.25l23.265625 39.421874c2.71875 4.605469 7.320313 7.632813 12.625 8.304688 5.308594.667969 10.519531-1.109375 14.296875-4.890625l15.023438-15.027344 16.921875 16.921875c6.695312 6.691406 17.585937 6.691406 24.277343 0l16.007813-16.007812 16.113281 16.117187c6.695313 6.691407 17.585938 6.691407 24.277344 0l16.089844-16.089843 20.429687 20.429687c1.953125 1.953125 4.511719 2.929687 7.070313 2.929687 2.5625 0 5.121094-.976562 7.074218-2.929687 3.90625-3.90625 3.90625-10.238281 0-14.140625zm-456.605468-341.792969c5.511718-5.671875 12.859375-9.253906 20.886718-10.03125 10.066407-.972656 19.921876 2.5625 27.066407 9.707031l41.289062 41.292969c11.71875 11.71875 13.105469 30.59375 3.226563 43.898438l-3.238282 4.363281zm181.671875 174.070313c13.304687-9.882813 32.179687-8.496094 43.898437 3.226562l41.289063 41.289063c7.144531 7.144531 10.683593 17.011719 9.710937 27.066406-.761718 7.855469-4.210937 15.058594-9.671875 20.527344l-89.175781-89.175781zm0 0\"/><path d=\"m112.429688 310.0625c-2.640626 0-5.210938 1.070312-7.070313 2.929688-1.871094 1.863281-2.929687 4.441406-2.929687 7.070312 0 2.632812 1.058593 5.210938 2.929687 7.074219 1.859375 1.855469 4.433594 2.929687 7.070313 2.929687 2.632812 0 5.210937-1.070312 7.070312-2.929687 1.859375-1.863281 2.929688-4.441407 2.929688-7.074219 0-2.628906-1.066407-5.207031-2.929688-7.070312-1.859375-1.859376-4.4375-2.929688-7.070312-2.929688zm0 0\"/>\n        </svg>);\n    } else {\n        return(<svg height={height} viewBox=\"0 0 512 512\" width={width} xmlns=\"http://www.w3.org/2000/svg\" >\n            <path d=\"m136 272h16v16h-16zm0 0\"/><path d=\"m168 272h16v16h-16zm0 0\"/><path d=\"m200 272h16v16h-16zm0 0\"/><path d=\"m136 304h16v16h-16zm0 0\"/><path d=\"m168 304h16v16h-16zm0 0\"/><path d=\"m200 304h16v16h-16zm0 0\"/><path d=\"m232 304h16v16h-16zm0 0\"/><path d=\"m264 304h16v16h-16zm0 0\"/><path d=\"m136 336h16v16h-16zm0 0\"/><path d=\"m168 336h16v16h-16zm0 0\"/><path d=\"m200 336h16v16h-16zm0 0\"/><path d=\"m232 336h16v16h-16zm0 0\"/><path d=\"m264 336h16v16h-16zm0 0\"/><path d=\"m136 368h16v16h-16zm0 0\"/><path d=\"m168 368h16v16h-16zm0 0\"/><path d=\"m200 368h16v16h-16zm0 0\"/><path d=\"m232 368h16v16h-16zm0 0\"/><path d=\"m264 368h16v16h-16zm0 0\"/><path d=\"m136 400h16v16h-16zm0 0\"/><path d=\"m168 400h16v16h-16zm0 0\"/><path d=\"m200 400h16v16h-16zm0 0\"/><path d=\"m232 400h16v16h-16zm0 0\"/><path d=\"m264 400h16v16h-16zm0 0\"/><path d=\"m136 432h16v16h-16zm0 0\"/><path d=\"m168 432h16v16h-16zm0 0\"/><path d=\"m200 432h16v16h-16zm0 0\"/><path d=\"m232 432h16v16h-16zm0 0\"/><path d=\"m264 432h16v16h-16zm0 0\"/><path d=\"m472 24h-56v-16c0-4.417969-3.582031-8-8-8h-80c-4.417969 0-8 3.582031-8 8v16h-312c-4.417969 0-8 3.582031-8 8v32c0 4.421875 3.582031 8 8 8h24v152c0 4.421875 3.582031 8 8 8s8 3.582031 8 8c0 4.421875-3.582031 8-8 8s-8-3.578125-8-8h-16c.023438 5.855469 2.199219 11.5 6.121094 15.851562l-20.519532 27.351563.101563.078125c-1.070313 1.34375-1.6679688 3.003906-1.703125 4.71875v32c0 2.125.84375 4.15625 2.34375 5.65625l16 16c1.5 1.5 3.535156 2.34375 5.65625 2.34375h32c2.121094 0 4.15625-.84375 5.65625-2.34375l16-16c1.5-1.5 2.34375-3.53125 2.34375-5.65625v-32c-.035156-1.714844-.632812-3.375-1.703125-4.71875l.101563-.078125-20.519532-27.351563c5.34375-5.9375 7.359375-14.15625 5.371094-21.890624-1.984375-7.734376-7.710938-13.960938-15.25-16.589844v-145.371094h272v8c0 4.421875 3.582031 8 8 8h16v376h-32v-320h-16v32h-48v-16h-16v16h-48v-8h-16v8h-48v-24h104v-16h-104v-32h-16v360h-12.6875l-37.65625-37.652344c-3.125-3.125-8.1875-3.125-11.3125 0l-37.65625 37.652344h-4.6875v16h480v-16h-6.238281c5.628906-6.144531 7.628906-14.792969 5.269531-22.789062-2.355469-7.992188-8.726562-14.171876-16.792969-16.28125 4.066407-10.027344.925781-21.53125-7.675781-28.097657-8.597656-6.566406-20.527344-6.566406-29.125 0-8.601562 6.566407-11.742188 18.070313-7.675781 28.097657-8.066407 2.109374-14.4375 8.289062-16.792969 16.28125-2.359375 7.996093-.359375 16.644531 5.269531 22.789062h-14.238281v-376h16c4.417969 0 8-3.578125 8-8v-8h56c4.417969 0 8-3.578125 8-8v-32c0-4.417969-3.582031-8-8-8zm-428 240 12 16h-32l12-16zm20 52.691406-11.3125 11.308594h-25.375l-11.3125-11.308594v-20.691406h48zm373.601562-276.691406-21.601562 14.402344v-14.402344zm-101.601562-24h32v32h-32zm-216 25.601562 21.601562 14.398438h-43.203124zm-48 12.800782-21.601562-14.402344h43.203124zm74.398438-14.402344h43.203124l-21.601562 14.402344zm69.601562 1.601562 21.601562 14.398438h-43.203124zm26.398438-1.601562h43.203124l-21.601562 14.402344zm-226.398438 0h5.601562l24 16h-29.601562zm274.398438 16 24-16h5.601562v16zm85.601562 381.601562-14.398438-21.601562 14.398438-21.597656zm0-192-14.398438-21.601562 14.398438-21.597656zm-16 4.800782 14.398438 21.597656-14.398438 21.601562zm0-52.800782v-43.199218l14.398438 21.597656zm0 148.800782 14.398438 21.597656-14.398438 21.601562zm16-4.847656-14.398438-21.554688 14.398438-21.597656zm-14.398438-213.554688 14.398438-21.597656v43.199218zm-1.601562-26.398438v-13.601562h9.054688zm-64 90.398438v80h-48v-80zm-64 0v68.800781l-18.398438-18.183593c-1.492187-1.472657-3.503906-2.304688-5.601562-2.3125h-24v-48.304688zm-64 0v13.335938h-48v-13.335938zm-120 251.3125 20.6875 20.6875h-41.375zm72 20.6875v-242.664062h48v27c0 4.421874 3.582031 8 8 8h28.710938l29.6875 29.355468c1.492187 1.472656 3.503906 2.304688 5.601562 2.308594h56v176zm240-21.597656 14.398438 21.597656h-14.398438zm96 13.597656c-4.417969 0-8-3.578125-8-8 0-4.417969 3.582031-8 8-8s8 3.582031 8 8c0 4.421875-3.582031 8-8 8zm-16-48c4.417969 0 8 3.582031 8 8 0 4.421875-3.582031 8-8 8s-8-3.578125-8-8c0-4.417969 3.582031-8 8-8zm-16 32c4.417969 0 8 3.582031 8 8 0 4.421875-3.582031 8-8 8s-8-3.578125-8-8c0-4.417969 3.582031-8 8-8zm-24-368h-64v-8h40c4.417969 0 8-3.578125 8-8v-40h16zm42.398438-16 21.601562-14.398438v14.398438zm0 0\"/>\n        </svg>);\n    }\n\n}\n\n","import React from 'react';\nimport {Card, Container, Row, Col} from \"react-bootstrap\";\nimport './style/skills.scss';\nimport {SectionIcons, SmallIcons} from \"../features/iconmanager\";\n\n\nexport function Skills() {\n    return(\n        <div className=\"background\" id=\"Skills\">\n            <div className=\"lrgCard\">\n                <Container className=\"title-bar\">\n                    <Row id=\"card-title-p\" >\n                        {SectionIcons(\"Skills\")}\n                        <h1 id=\"card-title\">Skills</h1>\n                    </Row>\n                </Container>\n\n                <div className=\"container-fluid\">\n                    {getSkills()}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nlet skillsTree = [ \"React\", \"JavaScript\", \"Typescript\", \"HTML 5\", \"CSS 3\", \"Redux\", \"SASS\", \"GitHub\", \"Java\" , \"C Sharp\", \"C++\", \"C\", \"Python\", \"Android\"];\n\nfunction getSkills() {\n    let built = skillsTree.map(skill => SkillBuild(skill));\n\n    return (\n        <Row className=\"deck\" >\n            {built}\n        </Row>\n    );\n}\n\nconst listStyle = {\n    textAlign: \"center\" as 'center',\n    fontSize: \".75rem\"\n};\n\nfunction SkillBuild(skill: string) {\n    return (\n        <Col xs={4} sm={4} md={2} key={skill}>\n            <Card className=\"img-back\">\n                {SmallIcons(skill)}\n            </Card>\n\n            <Card.Text style={listStyle} >\n            {skill}\n            </Card.Text>\n        </Col>\n    );\n}","import React from 'react';\nimport {AccordionCollapse, AccordionToggle, Button, Card, Container, Row} from \"react-bootstrap\";\nimport {SectionIcons} from \"../features/iconmanager\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {expandedAbout, selectAboutExpand, selectLight} from \"../features/stateSlice\";\n\n\nexport function About () {\n    const dispatch = useDispatch();\n    const expand = useSelector(selectAboutExpand);\n    const light = useSelector(selectLight);\n\n    return (\n        <div className=\"background\" id=\"About\">\n            <div className=\"lrgCard\">\n                <Container className=\"title-bar\">\n                    <Row id=\"card-title-p\">\n                        {SectionIcons(\"About\")}\n                        <h1 id=\"card-title\">About Me</h1>\n                    </Row>\n                </Container>\n\n                <div className=\"container-fluid\">\n                    <Card.Text>\n                        Hello, my name is Chris, a Full Stack Software Engineer. I am located in Seattle, Washington.\n                        This site is still under construction, please come back soon! This site is optimized for mobile first. <i>Posted - 3/12/20</i>\n                    </Card.Text>\n                    <AccordionCollapse eventKey=\"open\">\n                    <div>\n                        <p>\n                            I graduated from the University of Washington in August 2016. I started my career at GE Healthcare where,\n                            under the mentorship of a great Software Architect, I grew into the role of DevOps engineer. During my time at\n                            GE I learned valuable skills in scripting, C#, Java, Python, Jenkins, and Batch.\n                        </p>\n                        <p>\n                            After spending a year rebuilding the entire monolith infrastructure at GE into a microservice architecture, I had\n                            outgrown my role and started applying for positions and landed at Microsoft working in the Windows Search Team.\n                            It was on this team that I had my first exposure to Full Stack development, working with React, using Redux, Typescript, and C++.\n                            On the Search team I developed prototypes for the current File Explorer, and created a troubleshooter for the Windows Search box.\n                        </p>\n                        <p className=\"bottom-p\">\n                            After the Windows Search team I took a position at Tableau where I returned to my DevOps roots and\n                            realized Full Stack/Front End is where I would rather be. After helping Tableau Software migrate off\n                            Python 2.7 the project wrapped successfully.\n                        </p>\n                    </div>\n                    </AccordionCollapse>\n                    <AccordionToggle as={Button} variant={light ? \"dark\" : \"light\"} eventKey=\"open\" onClick={() => dispatch(expandedAbout())}>\n                            <p className=\"bottom-p\" hidden={!expand} >Close</p>\n                            <p className=\"bottom-p\" hidden={expand} >More</p>\n                    </AccordionToggle>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport {\n    Card,\n    Container,\n    Row\n} from \"react-bootstrap\";\nimport {SectionIcons, SmallIcons} from \"../features/iconmanager\";\n\n\nexport function Built (){\n    const card = {\n        fontSize: \".75rem\",\n        textAlign: \"center\" as 'center'\n    };\n    let className = \"build\";\n\n    return (\n        <div className=\"background\" id=\"Built\">\n            <div className=\"lrgCard\">\n                <Container className=\"title-bar\">\n                    <Row id=\"card-title-p\">\n                        {SectionIcons(\"Built\")}\n                        <h1 id=\"card-title\">Built Using</h1>\n                    </Row>\n                </Container>\n\n                <Card.Body>\n                        <Container>\n                            <Row>\n                                <div className={\"col-3\"} style={card}>\n                                    {SmallIcons(\"React\", className)}\n                                    <div>React</div>\n                                </div>\n                                <div className={\"col-3\"} style={card}>\n                                    {SmallIcons(\"Typescript\", className)}\n                                    <div>Typescript</div>\n                                </div>\n                                <div className={\"col-3\"} style={card}>\n                                    {SmallIcons(\"Bootstrap\", className)}\n                                    <div>Bootstrap</div>\n                                </div>\n                                <div className={\"col-3\"} style={card}>\n                                    {SmallIcons(\"Redux\", className)}\n                                    <div>Redux</div>\n                                </div>\n                            </Row>\n                        </Container>\n                </Card.Body>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport './style/contact.scss';\nimport {LargeIcons, SectionIcons} from \"../features/iconmanager\";\n\nlet links = [\n    {name:\"LinkedIn\", href:\"https://www.linkedin.com/in/chriskubec/\"},\n    {name:\"Email\", href:\"mailto:ckubec@gmail.com\"},\n    {name:\"Text\", href:\"sms:206-245-0897\"},\n    {name:\"Phone\", href:\"tel:206-245-0897\"},\n    {name:\"Github\", href:\"https://github.com/ckubec\"},\n];\n\nexport function Contact (){\n    let linkdivs = links.map(item => link(item.name, item.href));\n\n    return (\n        <div className=\"background\" id=\"Contact\">\n            <div className=\"lrgCard\">\n                <Container className=\"title-bar\" id=\"titleBar\">\n                    <div>\n                    <Row id=\"card-title-p\">\n                        {SectionIcons(\"Contact\")}\n                        <h1 id={\"card-title\"} >Contact</h1>\n                    </Row>\n                    </div>\n                </Container>\n\n                <Container className=\"body\">\n                    <Row className=\"justify-content-center\">\n                        {linkdivs}\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    );\n}\n\nfunction link(key: string, href: string) {\n    return(\n        <Col xs={4} sm={2} key={key+\"link\"}>\n            <a href={href}>\n                {LargeIcons(key)}\n                <h6>{key}</h6>\n            </a>\n        </Col>\n    );\n}","import React from 'react';\nimport {Button, Container, Row} from \"react-bootstrap\";\nimport './style/portfolio.scss';\nimport {SectionIcons} from \"../features/iconmanager\";\n\n\nexport function Portfolio () {\n    return (\n        <div className=\"background\" id=\"Portfolio\">\n            <div className=\"lrgCard\">\n                <Container className=\"title-bar\">\n                    <Row id=\"card-title-p\" >\n                        {SectionIcons(\"Portfolio\")}\n                        <h1 id=\"card-title\">Portfolio</h1>\n                    </Row>\n                </Container>\n\n                <div className=\"container-fluid\" >\n                    <p className=\"bottom-p\">\n                        I am currently building a portfolio to reflect my current skill set. Please visit my LinkedIn and Github below to see my old college projects.\n                        Also please take a look at the code I wrote for this site. <Button href=\"https://github.com/ckubec/vigilant-barnacle\">Here</Button>\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport {Accordion} from \"react-bootstrap\";\nimport {Skills} from \"./skills\";\nimport {About} from \"./about\";\nimport {Built} from \"./built\";\nimport {Contact} from \"./contact\";\nimport {Portfolio} from \"./portfolio\";\nimport './style/card.scss';\nimport {useSelector} from \"react-redux\";\nimport {selectLight} from \"../features/stateSlice\";\n\n\nexport function Body () {\n    const lightMode = useSelector(selectLight);\n\n    return (\n            <div className={(lightMode) ? \"light\" : \"dark\"}>\n                <Accordion>\n                    <About />\n                    <Skills />\n                    <Portfolio />\n                    <Contact />\n                    <Built />\n                </Accordion>\n            </div>\n    );\n}","import React from 'react';\nimport {Header} from \"./header/header\";\nimport {Body} from \"./body/body\";\n\nconst bodystyle = {\n    position: 'relative' as 'relative',\n    overflowY: \"scroll\" as 'scroll',\n    //backgroundColor: \"white\"\n};\n\nclass App extends React.Component {\n    render() {\n        return (\n            <>\n                <Header/>\n                <div style={bodystyle}>\n                    <Body key=\"pagebody\"/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import {configureStore, ThunkAction, Action} from \"@reduxjs/toolkit\";\nimport appReducer from '../features/stateSlice';\n\n\nexport const store = configureStore({\n    reducer: {\n        app: appReducer,\n    },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./app/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App key=\"app\" />\n    </Provider>, document.getElementById(\"app\"));"],"sourceRoot":""}