{"version":3,"sources":["banner.tsx","header.tsx","app.tsx","index.js"],"names":["BannerCanvas","hex","grid","interval","state","height","window","innerHeight","width","innerWidth","timer","Date","toLocaleTimeString","handleWindowResize","bind","buildGrid","offsety","Math","sqrt","z","i","x","Number","y","this","push","Hexagon","setState","console","log","canvasstyle","backgroundColor","outerWidth","display","style","map","draw","addEventListener","setInterval","tick","clearInterval","floor","random","length","setColor","randColor","forceUpdate","React","Component","size","color","sides","radius","fill","stroke","tabs","buttonstyle","fontFamily","padding","fontSize","marginRight","textShadow","Header","shift","items","tab","name","NavItem","key","Nav","Link","toUpperCase","Navbar","collapseOnSelect","borderBottom","background","sticky","expand","NavbarBrand","NavbarToggle","aria-controls","NavbarCollapse","id","className","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.305a5688.chunk.js","sourcesContent":["import React from 'react';\nimport {Stage, Layer, RegularPolygon} from 'react-konva';\n\n\ninterface HexState {\n    width: number,\n    height: number\n}\n\nexport class BannerCanvas extends React.Component<HexState> {\n    grid: Hexagon[] = [];\n    interval: any;\n    constructor(hex: HexState) {\n        super(hex);\n        this.state = {\n            height: window.innerHeight,\n            width: window.innerWidth,\n            timer: new Date().toLocaleTimeString()\n        };\n        this.handleWindowResize = this.handleWindowResize.bind(this);\n        this.buildGrid();\n    };\n\n    buildGrid() {\n        let size = 35;\n        let offset = 3 / 2 * size;\n        let offsety = Math.sqrt(3) * size;\n\n        for (let z = 0; z < 9; z++) {\n            for (let i = 0; i <= 25; i++) {\n                if (z % 2 === 0) {\n                    let x = Number(offsety * i);\n                    let y = 0 + offset * z;\n                    this.grid.push( new Hexagon(x, y, size, \"black\"));\n                } else {\n                    let x = Number(offsety*i - offsety/2);\n                    let y = (0+offset*z);\n                    this.grid.push( new Hexagon(x, y, size, \"black\"));\n                }\n            }\n        }\n    }\n\n    handleWindowResize() {\n        this.setState({\n            height: window.innerHeight,\n            width: window.innerWidth\n        });\n        //this.grid[4].setColor(\"blue\");\n        console.log(this.state);\n    };\n\n    render() {\n        const canvasstyle = {\n            backgroundColor: \"black\",\n            width: window.outerWidth,\n            height: window.innerHeight / 2,\n            display: \"flex\"\n        };\n\n        return (\n            <Stage width={window.innerWidth} height={400} style={canvasstyle}>\n                <Layer>\n                    {this.grid.map(grid => grid.draw())}\n                </Layer>\n            </Stage>\n        );\n    };\n\n    componentDidMount(): void {\n        window.addEventListener(\"resize\", this.handleWindowResize);\n        this.interval = setInterval(() => this.tick(), 150);\n    };\n\n    componentWillUnmount(): void {\n        clearInterval(this.interval);\n    }\n\n    tick() {\n        this.grid[Math.floor(Math.random()*(this.grid.length))].setColor(this.grid[0].randColor());\n\n        //this.grid[0].setColor(this.grid[0].randColor());\n        this.forceUpdate();\n    }\n}\n\n\nclass Hexagon {\n    x:number;\n    y:number;\n    size:number;\n    color:string;\n\n    constructor(x:number, y:number, size:number, color:string) {\n        this.x = x;\n        this.y = y;\n        this.size = size;\n        this.color = color;\n    }\n\n    draw() {\n        return <RegularPolygon sides={6} radius={this.size} x={this.x} y={this.y} fill={this.color} stroke={\"white\"}></RegularPolygon>;\n    }\n\n    setColor(color:string) {\n        this.color = color;\n\n    }\n\n    randColor() {\n        return \"rgba(\" + Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \", \"+ Math.floor(Math.random()*256) + \")\";\n    }\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {Nav, Navbar, NavbarBrand, NavItem} from \"react-bootstrap\";\nimport './header.css';\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\nimport NavbarToggle from \"react-bootstrap/NavbarToggle\";\nimport {BannerCanvas} from \"./banner\";\n\n\nlet tabs = [\"Chris Kubec\", \"About\", \"Projects\", \"Connect\"];\nconst buttonstyle = {\n    color: \"#ffffff\",\n    fontFamily: 'Dosis, sans-serif',\n    backgroundColor: \"black\",\n    padding: \".5em 1.5em .5em\",\n    fontSize: \"20px\",\n    marginRight: \".5em\",\n    textShadow: \"160\"\n};\n\nexport class Header extends React.Component {\n    render() {\n        const styling = {\n            color: '#3739ff',\n            borderBottom: \"3px solid black\",\n            background: \"black\"\n        };\n        const brand = \"Chris Kubec\";\n        tabs.shift();\n        let items = tabs.map(tab => myNavItems(tab));\n\n        const togglestyle = {\n            padding: \".5em 1.5em .5em\",\n            color: \"white\",\n        };\n\n        const titlestyle = {\n            color: \"white\",\n            fontFamily: 'Dosis, sans-serif',\n            fontSize: \"20px\",\n        };\n\n        const banner = {\n            height: 400,\n            width: 400\n        }\n\n        return (\n            <>\n                <div style={banner}>\n                    <BannerCanvas width={window.innerWidth} height={window.innerHeight}/>\n                </div>\n\n                <Navbar collapseOnSelect style={styling} sticky=\"top\" expand=\"lg\"  >\n                    <NavbarBrand style={titlestyle}><Nav.Link style={buttonstyle}>{brand.toUpperCase()}</Nav.Link></NavbarBrand>\n                    <NavbarToggle aria-controls=\"responsive-navbar-nav\" style={togglestyle}/>\n                    <NavbarCollapse id=\"responsive-navbar-nav\" >\n                        <Nav className=\"justify-content-center\">{items}</Nav>\n                    </NavbarCollapse>\n                </Navbar>\n            </>\n        );\n    }\n}\n\nfunction myNavItems(name:string) {\n    return (\n        <NavItem key={name} >\n            <Nav.Link style={buttonstyle} >{name.toUpperCase()}</Nav.Link>\n        </NavItem>\n    );\n}","import React from 'react';\nimport './index.css';\nimport {Header} from \"./header\";\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <>\n                <Header/>\n                <p>Body</p>\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));"],"sourceRoot":""}